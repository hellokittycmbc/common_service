<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/cache
      http://www.springframework.org/schema/cache/spring-cache-3.0.xsd">

    <context:component-scan base-package="com.fx.crm.cron" annotation-config="true"/>
    <context:component-scan base-package="com.fx.report" annotation-config="true"/>
    <aop:config proxy-target-class="true"/>
    <!-- 使用MethodInvokingJobDetailFactoryBean，任务类可以不实现Job接口，通过targetMethod指定调用方法 -->
    <!-- 定义业务逻辑处理类  -->
    <bean id="taskJob" class="com.fx.crm.cron.comm.impl.NewCommCalculateServiceImpl"/>

    <bean id="taskJob2" class="com.fx.report.ComprehensiveReport"/>

    <bean id="expAccountChangePwd" class="com.fx.timedTask.ExperienceAccountChangePwd"/>

    <!-- 增加调度业务逻辑  -->
    <bean id="jobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="group" value="job_work"/>
        <property name="name" value="job_work_name"/>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false"/>
        <property name="targetObject">
            <ref bean="taskJob"/>
        </property>
        <property name="targetMethod">
            <value>commissionDay</value>
        </property>
    </bean>

    <bean id="jobDetail2"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="group" value="job_work2"/>
        <property name="name" value="job_work_name2"/>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false"/>
        <property name="targetObject">
            <ref bean="taskJob2"/>
        </property>
        <property name="targetMethod">
            <value>comReport</value>
        </property>
    </bean>

    <!-- 增加调度业务逻辑  -->
    <bean id="jobDetail3"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="group" value="job_work3"/>
        <property name="name" value="job_work_name3"/>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false"/>
        <property name="targetObject">
            <ref bean="expAccountChangePwd"/>
        </property>
        <property name="targetMethod">
            <value>changePwd</value>
        </property>
    </bean>


    <bean id="transferService" class="com.fx.crm.transfer.impl.TransferServiceImpl"/>

    <bean id="transferJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="group" value="job_work5"/>
        <property name="name" value="job_work_name5"/>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false"/>
        <property name="targetObject">
            <ref bean="transferService"/>
        </property>
        <property name="targetMethod">
            <value>doTransferTask</value>
        </property>
    </bean>
    <!-- 调度触发器 -->
    <bean id="transferJobTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="name" value="work_default_name"/>
        <property name="group" value="work_default"/>
        <property name="jobDetail">
            <ref bean="transferJobDetail"/>
        </property>
        <property name="cronExpression">
            <value>0 0/10 * * * ?</value>
        </property>
    </bean>
    <!-- 调度触发器 -->
    <bean id="crmTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="name" value="work_default_name"/>
        <property name="group" value="work_default"/>
        <property name="jobDetail">
            <ref bean="jobDetail"/>
        </property>
        <property name="cronExpression">
            <value>0 0 1 * * ?</value>
        </property>
    </bean>

    <bean id="crmTrigger2"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="name" value="work_default_name2"/>
        <property name="group" value="work_default2"/>
        <property name="jobDetail">
            <ref bean="jobDetail2"/>
        </property>
        <property name="cronExpression">
            <value>0 0 0 * * ?</value>
        </property>
    </bean>

    <bean id="crmTrigger3"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="name" value="work_default_name3"/>
        <property name="group" value="work_default3"/>
        <property name="jobDetail">
            <ref bean="jobDetail3"/>
        </property>
        <property name="cronExpression">
            <value>0 0 2 * * ?</value>
        </property>
    </bean>

    <!-- 调度工厂 -->
    <bean id="crmScheduler"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="crmTrigger"/>
                <ref bean="crmTrigger2"/>
                <ref bean="crmTrigger3"/>
                <ref bean="transferJobTrigger"></ref>
            </list>
        </property>
    </bean>
</beans>