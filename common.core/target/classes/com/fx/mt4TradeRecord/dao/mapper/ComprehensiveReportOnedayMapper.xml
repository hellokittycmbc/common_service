<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.mt4TradeRecord.dao.IComprehensiveReportOnedayDao" >
  <resultMap id="BaseResultMap" type="com.fx.mt4TradeRecord.model.ComprehensiveReportOneday" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ib_name" property="ibName" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="early_amount" property="earlyAmount" jdbcType="NUMERIC" />
    <result column="amount_in" property="amountIn" jdbcType="NUMERIC" />
    <result column="amount_out" property="amountOut" jdbcType="NUMERIC" />
    <result column="commission" property="commission" jdbcType="NUMERIC" />
    <result column="taxes" property="taxes" jdbcType="NUMERIC" />
    <result column="profit" property="profit" jdbcType="NUMERIC" />
    <result column="last_amount" property="lastAmount" jdbcType="NUMERIC" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
    <result column="calculate_date" property="calculateDate" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ib_name, account, name, early_amount, amount_in, amount_out, commission, taxes, 
    profit, last_amount, create_date, update_date, calculate_date, status
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_comprehensive_report_oneday
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fx.mt4TradeRecord.model.ComprehensiveReportOneday" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_comprehensive_report_oneday (ib_name, account, name, 
      early_amount, amount_in, amount_out, 
      commission, taxes, profit, 
      last_amount, create_date, update_date, 
      calculate_date, status)
    values (#{ibName,jdbcType=VARCHAR}, #{account,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{earlyAmount,jdbcType=NUMERIC}, #{amountIn,jdbcType=NUMERIC}, #{amountOut,jdbcType=NUMERIC}, 
      #{commission,jdbcType=NUMERIC}, #{taxes,jdbcType=NUMERIC}, #{profit,jdbcType=NUMERIC}, 
      #{lastAmount,jdbcType=NUMERIC}, #{createDate,jdbcType=VARCHAR}, #{updateDate,jdbcType=VARCHAR}, 
      #{calculateDate,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fx.mt4TradeRecord.model.ComprehensiveReportOneday" >
    update tb_comprehensive_report_oneday
    set ib_name = #{ibName,jdbcType=VARCHAR},
      account = #{account,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      early_amount = #{earlyAmount,jdbcType=NUMERIC},
      amount_in = #{amountIn,jdbcType=NUMERIC},
      amount_out = #{amountOut,jdbcType=NUMERIC},
      commission = #{commission,jdbcType=NUMERIC},
      taxes = #{taxes,jdbcType=NUMERIC},
      profit = #{profit,jdbcType=NUMERIC},
      last_amount = #{lastAmount,jdbcType=NUMERIC},
      create_date = #{createDate,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR},
      calculate_date = #{calculateDate,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_comprehensive_report_oneday
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_comprehensive_report_oneday
  </select>
  <select id="getByTimeLoginEarly" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from tb_comprehensive_report_oneday
    where create_date = #{date1,jdbcType=VARCHAR} 
    <if test="loginList != null">
      and account in
      <foreach item="login" index="index" collection="loginList" open="(" separator="," close=")">
        #{login,jdbcType=INTEGER}
      </foreach>
    </if>
    <if test="loginList == null">
      and account in ('')
    </if>
  </select>
  <select id="getByTimeLoginEarlyTotal" resultMap="BaseResultMap" parameterType="java.util.Map">
    select sum(last_amount) as lastAmount
    from tb_comprehensive_report_oneday
    where create_date = #{date1,jdbcType=VARCHAR}
    <if test="loginList != null">
      and account in
      <foreach item="login" index="index" collection="loginList" open="(" separator="," close=")">
        #{login}
      </foreach>
    </if>
    <if test="loginList == null">
      and account in ('')
    </if>
  </select>
  <select id="getByTimeLogin" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    sum(amount_in) as amountIn,sum(amount_out) as amountOut,sum(commission) as commission,sum(taxes) as taxes,sum(profit) as profit,account
    from tb_comprehensive_report_oneday
    where create_date between #{date1,jdbcType=VARCHAR} and #{date2,jdbcType=VARCHAR}
    <if test="loginList != null">
      and account in
      <foreach item="login" index="index" collection="loginList" open="(" separator="," close=")">
        #{login}
      </foreach>
    </if>
    <if test="loginList == null">
      and account in ('')
    </if>
    group by account
  </select>
  <select id="getByTimeLoginTotal" resultMap="BaseResultMap" parameterType="java.util.Map">
    select sum(early_amount) as early_amount,sum(last_amount) as last_amount,
    sum(amount_in) as amountIn,sum(amount_out) as amountOut,sum(commission) as commission,sum(taxes) as taxes,sum(profit) as profit
    from tb_comprehensive_report_oneday
    where create_date between #{date1,jdbcType=VARCHAR} and #{date2,jdbcType=VARCHAR}
    <if test="loginList != null">
      and account in
      <foreach item="login" index="index" collection="loginList" open="(" separator="," close=")">
        #{login}
      </foreach>
    </if>
    <if test="loginList == null">
      and account in ('')
    </if>
  </select>
</mapper>