<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.user.dao.IMT4TransferDao" >
  <resultMap id="BaseResultMap" type="com.fx.user.model.MT4Transfer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="NUMERIC" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="create_ip" property="createIp" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="update_ip" property="updateIp" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="TINYINT" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="frommt4Account" property="frommt4account" jdbcType="INTEGER" />
    <result column="tomt4Account" property="tomt4account" jdbcType="INTEGER" />
    <result column="refuseReason" property="refuseReason" jdbcType="VARCHAR" />
    <result column="apply_rate" property="apply_rate" jdbcType="NUMERIC" />
    <result column="audit_rate" property="audit_rate" jdbcType="NUMERIC" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="from_currency" property="from_currency" jdbcType="VARCHAR" />
    <result column="to_currency" property="to_currency" jdbcType="VARCHAR" />
    <result column="audit_amount" property="audit_amount" jdbcType="NUMERIC" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="auditName" property="auditName" jdbcType="VARCHAR" />
    <result column="data_source_id" property="dataSourceId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, amount, status, create_user, create_time, create_ip, update_user, update_time, 
    update_ip, is_del, currency, frommt4Account, tomt4Account,refuseReason,audit_rate,apply_rate,
    reason,from_currency,to_currency,audit_amount,comment,auditName,data_source_id
  </sql>
  <sql id="Base_Column_Listr" >
    w.id, w.uid, w.amount, w.status, w.create_user, w.create_time, w.create_ip, w.update_user, w.update_time, 
    w.update_ip, w.is_del, w.currency, w.frommt4Account, w.tomt4Account,w.refuseReason,w.audit_rate,w.apply_rate,
    w.reason,w.from_currency,w.to_currency,w.audit_amount,w.comment,w.auditName,w.data_source_id
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_mt4_transfer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert"  parameterType="com.fx.user.model.MT4Transfer" useGeneratedKeys="true" keyProperty="id">
    insert into tb_mt4_transfer (uid, amount, status, 
      create_user, create_time, create_ip, 
      update_user, update_time, update_ip, 
      is_del, currency, frommt4Account, 
      tomt4Account,refuseReason,apply_rate,
      audit_rate,reason,from_currency,to_currency,
      audit_amount,comment,auditName,data_source_id)
    values (#{uid,jdbcType=INTEGER}, #{amount,jdbcType=NUMERIC}, #{status,jdbcType=TINYINT}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, #{createIp,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=CHAR}, #{updateIp,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=TINYINT}, #{currency,jdbcType=VARCHAR}, #{frommt4account,jdbcType=INTEGER}, 
      #{tomt4account,jdbcType=INTEGER}, #{refuseReason,jdbcType=VARCHAR},#{apply_rate,jdbcType=NUMERIC},
      #{audit_rate,jdbcType=NUMERIC}, #{reason,jdbcType=VARCHAR}, #{from_currency,jdbcType=VARCHAR},
       #{to_currency,jdbcType=VARCHAR}, #{audit_amount,jdbcType=NUMERIC},#{comment,jdbcType=VARCHAR},
       #{auditName,jdbcType=VARCHAR},#{dataSourceId,jdbcType=INTEGER}) 
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fx.user.model.MT4Transfer" >
    update tb_mt4_transfer
    set uid = #{uid,jdbcType=INTEGER},
      amount = #{amount,jdbcType=NUMERIC},
      status = #{status,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      create_ip = #{createIp,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=CHAR},
      update_ip = #{updateIp,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT},
      currency = #{currency,jdbcType=VARCHAR},
      frommt4Account = #{frommt4account,jdbcType=INTEGER},
      tomt4Account = #{tomt4account,jdbcType=INTEGER},
      refuseReason = #{refuseReason,jdbcType=VARCHAR},
      apply_rate = #{apply_rate,jdbcType=NUMERIC},
      audit_rate = #{audit_rate,jdbcType=NUMERIC},
      reason = #{reason,jdbcType=VARCHAR},
      from_currency = #{from_currency,jdbcType=VARCHAR},
      to_currency = #{to_currency,jdbcType=VARCHAR},
      audit_amount = #{audit_amount,jdbcType=NUMERIC},
      comment = #{comment,jdbcType=VARCHAR},
      auditName =  #{auditName,jdbcType=VARCHAR},
      data_source_id = #{dataSourceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_mt4_transfer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_mt4_transfer
  </select>
  <select id="pageQueryCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select
    count(1)
    from tb_mt4_transfer where is_del=0 
    <if test="status != null">
       and status = #{status,jdbcType=TINYINT}
    </if>
    <if test="uid != null">
       and uid = #{uid,jdbcType=INTEGER}
    </if>
  </select>
  <select id="pageQueryList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select top ${limit}  
    <include refid="Base_Column_List" />
    from tb_mt4_transfer  where is_del=0 
    <if test="status != null">
    	<if test="status != -1">
        and status = #{status,jdbcType=TINYINT}
        </if>
    </if>
    <if test="uid != null">
       and uid = #{uid,jdbcType=INTEGER}
    </if>
    <if test="offset gt 0">
    and (
    	  (SELECT MIN(id) FROM (SELECT TOP ${offset} id	FROM tb_mt4_transfer  where is_del=0 
    	  <if test="status != null">
    	    <if test="status != -1">
	           and status = #{status,jdbcType=TINYINT}
	        </if>
	    </if>
	    <if test="uid != null">
	       and uid = #{uid,jdbcType=INTEGER}
	    </if> ORDER BY id desc) AS T) > id
		)
    </if>
	order by id desc
  </select>
  
   <select id="queryListByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_Listr" />
    from tb_mt4_transfer w ,tb_user_register r
    where w.uid = r.id
    AND w.is_del = 0
    <if test="statusq != -1">
      and w.status = #{statusq, jdbcType=TINYINT}
    </if>
    <if test="userq != null and userq !='' ">
      AND ( r.email LIKE #{userq, jdbcType=VARCHAR} OR r.enName LIKE #{userq, jdbcType=VARCHAR} OR w.frommt4account LIKE #{userq, jdbcType=VARCHAR} OR w.tomt4Account LIKE #{userq, jdbcType=VARCHAR})
    </if>
    order by w.status asc , w.update_time desc
  </select>


  <select id="queryListByStatus" resultMap="BaseResultMap" parameterType="java.util.Map">
    select  <include refid="Base_Column_Listr" />
    from tb_mt4_transfer w
    where w.id  in  (
    select top 10 min(id) cnum from tb_mt4_transfer
    where
    is_del = 0
    <if test="status != -1">
    and status = #{status, jdbcType=TINYINT}
   </if>
    group by frommt4account
    )
  </select>


  <select id="queryAccountTotalByMt4Account" resultType="java.lang.Double" parameterType="java.lang.Integer">
      SELECT  case when sum(amount) is null then 0 else sum(amount) end from tb_mt4_transfer w where w.frommt4account =#{frommt4account,jdbcType=TINYINT}
      and status in (10,0)
  </select>


</mapper>