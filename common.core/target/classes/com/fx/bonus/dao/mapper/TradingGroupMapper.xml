<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.bonus.dao.ITradingGroupDao" >
  <resultMap id="BaseResultMap" type="com.fx.bonus.model.TradingGroup" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="trading_category" property="tradingCategory" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="data_source_id" property="dataSourceId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, group_name, trading_category, status, update_user, update_date,data_source_id
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_trading_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fx.bonus.model.TradingGroup" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_trading_group (group_name, trading_category, status, 
      update_user, update_date,data_source_id)
    values (#{groupName,jdbcType=VARCHAR}, #{tradingCategory,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},#{dataSourceId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fx.bonus.model.TradingGroup" >
    update tb_trading_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      trading_category = #{tradingCategory,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      data_source_id=#{dataSourceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_trading_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_trading_group where status = 0
    order by id desc
  </select>
  <update id="deleteTradingGroup" parameterType="java.lang.Integer">
    update tb_trading_group
    set status =1
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getTradeGroupByDataSource" resultMap="BaseResultMap" parameterType="INTEGER">
    select
    <include refid="Base_Column_List" />
    from tb_trading_group where status=0
    AND  data_source_id = #{dataSourceId,jdbcType=INTEGER} order by id;
  </select>
  
  <select id="selectTradingGroupBydataSourceId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from tb_trading_group where status = 0 and data_source_id = #{dataSourceId,jdbcType=INTEGER}
  </select>
  
  <select id="queryCountByConditionByDataSource" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select
    count(1)
    from tb_trading_group
    where status = 0  and data_source_id = #{dataSourceId,jdbcType=INTEGER}
  </select>
  
  <select id="queryByConditionByDataSource" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select top ${limit}  
    <include refid="Base_Column_List" />
    from tb_trading_group
    where status = 0  and data_source_id = #{dataSourceId,jdbcType=INTEGER} 
    
    <if test="offset gt 0">
    and ( 
    	  (SELECT MIN(id) FROM (SELECT TOP ${offset} id	FROM tb_trading_group where  status = 0  and data_source_id = #{dataSourceId,jdbcType=INTEGER} 
    	   ORDER BY id desc) AS T) > id
		)
    </if>
	order by id desc
  </select>
  
</mapper>