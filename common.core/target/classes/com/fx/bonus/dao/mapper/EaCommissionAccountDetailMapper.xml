<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.bonus.dao.IEaCommissionAccountDetailDao" >
  <resultMap id="BaseResultMap" type="com.fx.bonus.model.EaCommissionAccountDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="eaId" property="eaid" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="NUMERIC" />
    <result column="payment_date" property="paymentDate" jdbcType="VARCHAR" />
    <result column="from_transaction_id" property="fromTransactionId" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="is_paid" property="isPaid" jdbcType="TINYINT" />
    <result column="volume" property="volume" jdbcType="NUMERIC" />
    <result column="ibCommission" property="ibcommission" jdbcType="NUMERIC" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="mt4Account" property="mt4account" jdbcType="INTEGER" />
    <result column="settleDate" property="settledate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, eaId, amount, payment_date, from_transaction_id, comment, is_paid, volume, 
    ibCommission, source, status, mt4Account, settleDate
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_Ea_commission_account_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fx.bonus.model.EaCommissionAccountDetail" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_Ea_commission_account_detail (uid, eaId, amount, 
      payment_date, from_transaction_id, comment, 
      is_paid, volume, ibCommission, 
      source, status, mt4Account, 
      settleDate)
    values (#{uid,jdbcType=INTEGER}, #{eaid,jdbcType=INTEGER}, #{amount,jdbcType=NUMERIC}, 
      #{paymentDate,jdbcType=VARCHAR}, #{fromTransactionId,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, 
      #{isPaid,jdbcType=TINYINT}, #{volume,jdbcType=NUMERIC}, #{ibcommission,jdbcType=NUMERIC}, 
      #{source,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{mt4account,jdbcType=INTEGER}, 
      #{settledate,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fx.bonus.model.EaCommissionAccountDetail" >
    update tb_Ea_commission_account_detail
    set uid = #{uid,jdbcType=INTEGER},
      eaId = #{eaid,jdbcType=INTEGER},
      amount = #{amount,jdbcType=NUMERIC},
      payment_date = #{paymentDate,jdbcType=VARCHAR},
      from_transaction_id = #{fromTransactionId,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      is_paid = #{isPaid,jdbcType=TINYINT},
      volume = #{volume,jdbcType=NUMERIC},
      ibCommission = #{ibcommission,jdbcType=NUMERIC},
      source = #{source,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      mt4Account = #{mt4account,jdbcType=INTEGER},
      settleDate = #{settledate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_Ea_commission_account_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_Ea_commission_account_detail
  </select>
  
  <select id="pageQueryCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select
    count(1)
    from tb_Ea_commission_account_detail
    where settleDate between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR}
    <if test="eaid != 0">
        and eaId = #{eaid, jdbcType=TINYINT}
    </if>
  </select>
  
  <select id="pageQueryList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select top ${limit}  
    <include refid="Base_Column_List" />
    from tb_Ea_commission_account_detail
    where settleDate between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR}
    <if test="eaid != 0">
        and eaId = #{eaid, jdbcType=TINYINT}
    </if>
    <if test="offset gt 0">
    and (
    	  (SELECT MIN(id) FROM (SELECT TOP ${offset} id	FROM tb_Ea_commission_account_detail 
    	   where settleDate between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR} 
		    <if test="eaid != 0">
		        and eaId = #{eaid, jdbcType=TINYINT}
		    </if>
    	   ORDER BY id desc) AS T) > id
		)
    </if>
	order by id desc
  </select>
</mapper>