<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.bonus.dao.ICommissionRulesDao" >
  <resultMap id="BaseResultMap" type="com.fx.bonus.model.CommissionRules" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rule_name" property="ruleName" jdbcType="VARCHAR" />
    <result column="trading_group_id" property="tradingGroupId" jdbcType="INTEGER" />
    <result column="account_group" property="accountGroup" jdbcType="INTEGER" />
    <result column="mt4_group" property="mt4Group" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="settle_mode" property="settleMode" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="settle_unit" property="settleUnit" jdbcType="VARCHAR" />
    <result column="commission_type" property="commissionType" jdbcType="VARCHAR" />
    <result column="userdefine1" property="userdefine1" jdbcType="VARCHAR" />
    <result column="userdefine2" property="userdefine2" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="data_source_id" property="dataSourceId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, rule_name, trading_group_id, account_group, mt4_group, settle_mode, role_id, 
    settle_unit, commission_type, userdefine1, userdefine2, update_user, update_date, status,data_source_id
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_commission_rules
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fx.bonus.model.CommissionRules" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_commission_rules (rule_name, trading_group_id, account_group, 
      mt4_group, settle_mode, role_id, status,
      settle_unit, commission_type, userdefine1, 
      userdefine2, update_user, update_date,data_source_id
      )
    values (#{ruleName,jdbcType=VARCHAR}, #{tradingGroupId,jdbcType=INTEGER}, #{accountGroup,jdbcType=INTEGER}, 
      #{mt4Group,jdbcType=VARCHAR}, #{settleMode,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
      #{settleUnit,jdbcType=VARCHAR}, #{commissionType,jdbcType=VARCHAR}, #{userdefine1,jdbcType=VARCHAR},
      #{userdefine2,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{dataSourceId,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fx.bonus.model.CommissionRules" >
    update tb_commission_rules
    set rule_name = #{ruleName,jdbcType=VARCHAR},
      trading_group_id = #{tradingGroupId,jdbcType=INTEGER},
      account_group = #{accountGroup,jdbcType=INTEGER},
      mt4_group = #{mt4Group,jdbcType=VARCHAR},
      settle_mode = #{settleMode,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      status =  #{status,jdbcType=INTEGER}, 
      settle_unit = #{settleUnit,jdbcType=VARCHAR},
      commission_type = #{commissionType,jdbcType=VARCHAR},
      userdefine1 = #{userdefine1,jdbcType=VARCHAR},
      userdefine2 = #{userdefine2,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      data_source_id=#{dataSourceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_commission_rules
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_commission_rules
    where status = 0
  </select>
  <select id="findAllByStatus" resultMap="BaseResultMap" parameterType="INTEGER">
    select
    <include refid="Base_Column_List" />
    from tb_commission_rules  where status=0
    AND  userdefine1 = #{typeid ,jdbcType=INTEGER }
  </select>
  <update id="updatestaById" parameterType="INTEGER" >
    update tb_commission_rules
    set status = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllByStatus1" resultMap="BaseResultMap" >
  select
  <include refid="Base_Column_List" />
  from tb_commission_rules  where status=0
  </select>
  <select id="findByDataSourceId" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from
    tb_commission_rules
    where status = 0 and data_source_id = #{dataSourceId, jdbcType=INTEGER}
  </select>
  
  <select id="getCommissionRulesByParam" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from
    tb_commission_rules
    where status = 0 <if test="dataSourceId"> and data_source_id = #{dataSourceId, jdbcType=INTEGER}</if> and settle_mode = #{settleMode,jdbcType=VARCHAR} and userdefine1 = #{userdefine1,jdbcType=VARCHAR}<if test="roleId!=null"> and role_id = #{roleId,jdbcType=INTEGER}</if> and trading_group_id = #{tradingGroupId,jdbcType=INTEGER} and id in(
    SELECT  convert(int,t.comm_rule_id)  FROM tb_user_commission_conf t
       WHERE  t.user_id = #{uid, jdbcType=VARCHAR}
       <if test="agentAccount!=null">AND  t.comm_account = #{agentAccount,jdbcType=VARCHAR}</if>
       )
  </select>
  
  <select id="getCommissionRulesByUid" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from
    tb_commission_rules
    where status = 0 AND  userdefine1 = #{userdefine1,jdbcType=VARCHAR}  <if test="dataSourceId"> and data_source_id = #{dataSourceId, jdbcType=INTEGER}</if><if test="roleId!=null"> and role_id = #{roleId,jdbcType=INTEGER}</if>and id in(
    SELECT  convert(int,t.comm_rule_id)  FROM tb_user_commission_conf t
       WHERE  t.user_id = #{uid, jdbcType=VARCHAR}
       )
  </select>
</mapper>