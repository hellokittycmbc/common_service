<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.crm.comm.dao.ICommissionMonthDao" >
  <resultMap id="BaseResultMap" type="com.fx.crm.comm.model.CommissionMonth" >
    <id column="guid" property="guid" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="mt4Account" property="mt4account" jdbcType="INTEGER" />
    <result column="ib_id" property="ibId" jdbcType="VARCHAR" />
    <result column="ib_id_type" property="ibIdType" jdbcType="INTEGER" />
    <result column="payment_date" property="paymentDate" jdbcType="VARCHAR" />
    <result column="volume" property="volume" jdbcType="DECIMAL" />
    <result column="withdraw_amount" property="withdrawAmount" jdbcType="DECIMAL" />
    <result column="deposit_amount" property="depositAmount" jdbcType="DECIMAL" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="CommissionMonthPriceMap" type="com.fx.crm.comm.model.CommissionMonth">
	 <id column="user_id" property="userId" jdbcType="VARCHAR" />
	 <result column="mt4Account" property="mt4account" jdbcType="INTEGER" />
	 <result column="volume" property="volume" jdbcType="DECIMAL" />
	 <result column="deposit_amount" property="depositAmount" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    guid, user_id, mt4Account, ib_id, ib_id_type, payment_date, volume, withdraw_amount, 
    deposit_amount, createDate, updateDate,status
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_IB_commission_month
    where guid = #{guid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fx.crm.comm.model.CommissionMonth" >
    insert into tb_IB_commission_month (guid, user_id, mt4Account, 
      ib_id, ib_id_type, payment_date, 
      volume, withdraw_amount, deposit_amount, 
      createDate, updateDate,status)
    values (#{guid,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{mt4account,jdbcType=INTEGER}, 
      #{ibId,jdbcType=VARCHAR}, #{ibIdType,jdbcType=INTEGER}, #{paymentDate,jdbcType=VARCHAR}, 
      #{volume,jdbcType=DECIMAL}, #{withdrawAmount,jdbcType=DECIMAL}, #{depositAmount,jdbcType=DECIMAL}, 
      #{createdate,jdbcType=TIMESTAMP}, #{updatedate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fx.crm.comm.model.CommissionMonth" >
    update tb_IB_commission_month
    set user_id = #{userId,jdbcType=VARCHAR},
      mt4Account = #{mt4account,jdbcType=INTEGER},
      ib_id = #{ibId,jdbcType=VARCHAR},
      ib_id_type = #{ibIdType,jdbcType=INTEGER},
      payment_date = #{paymentDate,jdbcType=VARCHAR},
      volume = #{volume,jdbcType=DECIMAL},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      deposit_amount = #{depositAmount,jdbcType=DECIMAL},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      updateDate = #{updatedate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where guid = #{guid,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from tb_IB_commission_month
    where guid = #{guid,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_IB_commission_month
  </select>
   <select id="queryCountByConditionByStatus" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select
    count(1)
    from tb_IB_commission_month
    <where> 
	     <if test="queryFrom != null">
	      and createDate &gt;= #{queryFrom,jdbcType=TIMESTAMP}
	    </if>
	    <if test="queryTo != null">
	      and createDate &lt;= #{queryTo,jdbcType=TIMESTAMP}
	    </if>
	    <if test="status != null">
	      and status = #{status,jdbcType=INTEGER}
	    </if>
    </where>
  </select>
  <!-- 利用分页插件实现分页 -->
   <select id="findCommissionByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from tb_IB_commission_month
	   <where> 
		     <if test="queryFrom != null">
		      and createDate &gt;= #{queryFrom,jdbcType=TIMESTAMP}
		    </if>
		    <if test="queryTo != null">
		      and createDate &lt;= #{queryTo,jdbcType=TIMESTAMP}
		    </if>
		    <if test="status != null">
		      and status = #{status,jdbcType=INTEGER}
		    </if>
	    </where>
	order by createDate desc
   </select>
  <select id="queryByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select top ${limit}  
    <include refid="Base_Column_List" />
    from tb_IB_commission_month
   <where> 
	     <if test="queryFrom != null">
	      and createDate &gt;= #{queryFrom,jdbcType=TIMESTAMP}
	    </if>
	    <if test="queryTo != null">
	      and createDate &lt;= #{queryTo,jdbcType=TIMESTAMP}
	    </if>
	    <if test="status != null">
	      and status = #{status,jdbcType=INTEGER}
	    </if>
    </where>
    <if test="offset gt 0">
    and 
    (
    	  (SELECT MIN(guid) FROM (SELECT TOP ${offset} guid	FROM tb_IB_commission_month 
    	  <where> 
			     <if test="queryFrom != null">
			      and createDate &gt;= #{queryFrom,jdbcType=TIMESTAMP}
			    </if>
			    <if test="queryTo != null">
			      and createDate &lt;= #{queryTo,jdbcType=TIMESTAMP}
			    </if>
			    <if test="status != null">
			      and status = #{status,jdbcType=INTEGER}
			    </if>
		    </where>
    	   ORDER BY guid desc) AS T) &gt; guid
		)
    </if>
	order by guid desc
  </select>
  <select id="getCommissionMonthByIbId" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from tb_IB_commission_month 
    where ib_id = #{ibId,jdbcType=VARCHAR} and payment_date between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR}
  </select>
  
  <select id="queryCountByConditionByIbId" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select
    count(1)
    from tb_IB_commission_month
    where  ib_id = #{ibId,jdbcType=VARCHAR}
    <if test="mt4account!=mull">
      and mt4Account =  #{mt4account,jdbcType=INTEGER}
    </if>
    and payment_date between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR}
  </select>
  
  <select id="queryByConditionByIbId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select top ${limit}  
    <include refid="Base_Column_List" />
    from tb_IB_commission_month
    where  ib_id = #{ibId,jdbcType=VARCHAR}
    <if test="mt4account!=mull">
      and mt4Account =  #{mt4account,jdbcType=INTEGER}
    </if>
    and payment_date between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR}
    
    <if test="offset gt 0">
    and ( 
    	  (SELECT MIN(payment_date) FROM (SELECT TOP ${offset} payment_date	FROM tb_IB_commission_month where  ib_id = #{ibId,jdbcType=VARCHAR}
      <if test="mt4account!=mull">
      and mt4Account =  #{mt4account,jdbcType=INTEGER}
      </if>and payment_date between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR}
    	   ORDER BY payment_date desc) AS T) > payment_date
		)
    </if>
	order by payment_date desc
  </select>
  
  <select id="getCommissionMonthByUser" resultMap="CommissionMonthPriceMap" parameterType="com.fx.crm.comm.model.CommissionMonth">
	  WITH ib_list AS (
	  SELECT
	  t.is_ibId,
	  t.id,
	  1 AS xLEVEL,
	  t.is_del,
	  t.enName,
	  t.mt4_datasource_type,
	  t.phone_num,
	  t.mt4_datasource_id
	  FROM
	  tb_user_register t
	  WHERE
	  t.is_ibId IN (
	  SELECT
	  u.id
	  FROM
	  tb_user_register u,
	  tb_sys_organization org
	  WHERE
	  u.is_del = 0
	  and u.org_id = org.id and u.website_user_type =6
	  ${sqlMap.dsf}
	  )
	  AND t.is_del = 0
	  UNION ALL
	  SELECT
	  c.is_ibId,
	  c.id,
	  ib_list.xLEVEL + 1,
	  c.is_del,
	  c.enName,
	  c.mt4_datasource_type,
	  c.phone_num,
	  c.mt4_datasource_id
	  FROM
	  tb_user_register c
	  INNER JOIN ib_list ON c.is_ibId = ib_list.id
	  )
	  select
	m.user_id,m.mt4Account,sum(volume) as volume,sum(m.deposit_amount) as deposit_amount
	from tb_IB_commission_month m,ib_list A
	  where m.user_id = A.id
	and  m.payment_date between #{sqlMap.params.interviewDate1,jdbcType=VARCHAR} and #{sqlMap.params.interviewDate2,jdbcType=VARCHAR} 
	<if test="sqlMap.params.ibId !=null">
		and m.ib_id = #{sqlMap.params.ibId,jdbcType=INTEGER}
	</if>
	<if test="sqlMap.params.login !=null">
		and m.mt4Account = #{sqlMap.params.login,jdbcType=INTEGER}
	</if>
	 group by m.user_id,m.mt4Account ORDER BY  m.user_id,m.mt4Account desc ;
  </select>
  
  <select id="getCommissionMonthByUserStatus" resultMap="BaseResultMap" parameterType="com.fx.crm.comm.model.CommissionMonth">
	  WITH ib_list AS (
	  SELECT
	  t.is_ibId,
	  t.id,
	  1 AS xLEVEL,
	  t.is_del,
	  t.enName,
	  t.mt4_datasource_type,
	  t.phone_num,
	  t.mt4_datasource_id
	  FROM
	  tb_user_register t
	  WHERE
	  t.is_ibId IN (
	  SELECT
	  u.id
	  FROM
	  tb_user_register u,
	  tb_sys_organization org
	  WHERE
	  u.is_del = 0
	  and u.org_id = org.id and u.website_user_type =6
	  ${sqlMap.dsf}
	  )
	  AND t.is_del = 0
	  UNION ALL
	  SELECT
	  c.is_ibId,
	  c.id,
	  ib_list.xLEVEL + 1,
	  c.is_del,
	  c.enName,
	  c.mt4_datasource_type,
	  c.phone_num,
	  c.mt4_datasource_id
	  FROM
	  tb_user_register c
	  INNER JOIN ib_list ON c.is_ibId = ib_list.id
	  )
	  select
	<include refid="Base_Column_List" />
	from tb_IB_commission_month m,ib_list A
	  where m.user_id = A.id
	and  m.payment_date between #{sqlMap.params.interviewDate1,jdbcType=VARCHAR} and #{sqlMap.params.interviewDate2,jdbcType=VARCHAR} 
	<if test="sqlMap.params.ibId !=null">
		and m.ib_id = #{sqlMap.params.ibId,jdbcType=INTEGER}
	</if>
	<if test="sqlMap.params.login !=null">
		and m.mt4Account = #{sqlMap.params.login,jdbcType=INTEGER}
	</if>
	<if test="sqlMap.params.status !=null">
		and m.status = #{sqlMap.params.status,jdbcType=INTEGER}
	</if>
	 ORDER BY  m.payment_date desc ;
  </select>
	<select id="findIBCommissionByParams" resultMap="BaseResultMap" parameterType="com.fx.crm.comm.model.CommissionMonth">
		WITH ib_list AS (
		SELECT
		t.is_ibId,
		t.id,
		1 AS xLEVEL,
		t.is_del,
		t.enName,
		t.mt4_datasource_type,
		t.phone_num,
		t.mt4_datasource_id
		FROM
		tb_user_register t
		WHERE
		t.is_ibId IN (
		SELECT
		u.id
		FROM
		tb_user_register u,
		tb_sys_organization org
		WHERE
		u.is_del = 0
		and u.org_id = org.id and u.website_user_type =6
		${sqlMap.dsf}
		)
		AND t.is_del = 0
		UNION ALL
		SELECT
		c.is_ibId,
		c.id,
		ib_list.xLEVEL + 1,
		c.is_del,
		c.enName,
		c.mt4_datasource_type,
		c.phone_num,
		c.mt4_datasource_id
		FROM
		tb_user_register c
		INNER JOIN ib_list ON c.is_ibId = ib_list.id
		)
		select
		<include refid="Base_Column_List" />
		from tb_IB_commission_month m,ib_list A
		where m.user_id = A.id
		and  m.payment_date between #{sqlMap.params.interviewDate1,jdbcType=VARCHAR} and #{sqlMap.params.interviewDate2,jdbcType=VARCHAR}
		<if test="sqlMap.params.ibId !=null">
			and m.ib_id = #{sqlMap.params.ibId,jdbcType=INTEGER}
		</if>
		<if test="sqlMap.params.login !=null">
			and m.mt4Account = #{sqlMap.params.login,jdbcType=INTEGER}
		</if>
		<if test="sqlMap.params.mt4Account !=null">
			and m.mt4Account like #{sqlMap.params.mt4Account,jdbcType=VARCHAR}
		</if>
		<if test="sqlMap.params.status !=null">
			and m.status = #{sqlMap.params.status,jdbcType=INTEGER}
		</if>
		ORDER BY  m.payment_date desc ;
	</select>
	<select id="getTotalNoReturnByUidAndMt4" resultType="java.math.BigDecimal" parameterType="com.fx.crm.comm.model.CommissionMonth" >
		select
		sum(deposit_amount)
		from tb_IB_commission_month
		<where>
			user_id = #{userId,jdbcType=VARCHAR} and
			mt4Account = #{mt4account,jdbcType=INTEGER} and
			status != #{status,jdbcType=INTEGER} and
			payment_date &lt;=  #{sqlMap.endTime, jdbcType=TIMESTAMP} and
			payment_date &gt;=  #{sqlMap.startTime, jdbcType=TIMESTAMP}
		</where>
	</select>
	<select id="getTotalReturnByUidAndMt4" resultType="java.math.BigDecimal" parameterType="com.fx.crm.comm.model.CommissionMonth" >
		select
		sum(deposit_amount)
		from tb_IB_commission_month
		<where>
			user_id = #{userId,jdbcType=VARCHAR} and
			mt4Account = #{mt4account,jdbcType=INTEGER} and
			status = #{status,jdbcType=INTEGER} and
			payment_date &lt;=  #{sqlMap.endTime, jdbcType=TIMESTAMP} and
			payment_date &gt;=  #{sqlMap.startTime, jdbcType=TIMESTAMP}
		</where>
	</select>
	<select id="getTotalByUidAndMt4" resultType="java.math.BigDecimal" parameterType="com.fx.crm.comm.model.CommissionMonth" >
		select
		sum(deposit_amount)
		from tb_IB_commission_month
		<where>
			user_id = #{userId,jdbcType=VARCHAR} and
			mt4Account = #{mt4account,jdbcType=INTEGER} and
			payment_date &lt;=  #{sqlMap.endTime, jdbcType=TIMESTAMP} and
			payment_date &gt;=  #{sqlMap.startTime, jdbcType=TIMESTAMP}
		</where>
	</select>
	<select id="findIBCommissionDetailsByParams" resultMap="BaseResultMap" parameterType="com.fx.crm.comm.model.CommissionMonth">
		select
		<include refid="Base_Column_List" />
		from tb_IB_commission_month
		<where>
			payment_date &lt;=  #{endTime, jdbcType=TIMESTAMP} and
			payment_date &gt;=  #{startTime, jdbcType=TIMESTAMP}
		<if test="uid !=null">
			and user_id = #{uid,jdbcType=INTEGER}
		</if>
		<if test="login !=null">
			and mt4Account = #{login,jdbcType=INTEGER}
		</if>
		<if test="status !=null">
			and status = #{status,jdbcType=INTEGER}
		</if>
		<if test="status ==null">
			and status != 2
		</if>

		<if test="guidList !=null">
			and guid in
			<foreach item="guid" index="index" collection="guidList" open="(" separator="," close=")">
				#{guid}
			</foreach>
		</if>
		</where>
		ORDER BY  payment_date desc ;
	</select>

	<select id="getTotalVolumeByParams" resultType="java.math.BigDecimal" parameterType="com.fx.crm.comm.model.CommissionMonth">
		select
		sum(volume)
		from tb_IB_commission_month
		<where>
			payment_date between #{interviewDate1,jdbcType=VARCHAR} and #{interviewDate2,jdbcType=VARCHAR}
			<if test="uid !=null">
				and user_id = #{uid,jdbcType=INTEGER}
			</if>
			<if test="mt4Account !=null">
				and mt4Account like #{mt4Account,jdbcType=VARCHAR}
			</if>
			<if test="login !=null">
				and mt4Account = #{login,jdbcType=INTEGER}
			</if>
			<if test="status !=null">
				and status = #{status,jdbcType=INTEGER}
			</if>

			<if test="guidList !=null">
				and guid in
				<foreach item="guid" index="index" collection="guidList" open="(" separator="," close=")">
					#{guid}
				</foreach>
			</if>
		</where>
	</select>

	<select id="getTotalCommissionByParams" resultType="java.math.BigDecimal" parameterType="com.fx.crm.comm.model.CommissionMonth">
		select
		sum(deposit_amount)
		from tb_IB_commission_month
		<where>
			payment_date between #{interviewDate1,jdbcType=VARCHAR} and #{interviewDate2,jdbcType=VARCHAR}
			<if test="uid !=null">
				and user_id = #{uid,jdbcType=INTEGER}
			</if>
			<if test="login !=null">
				and mt4Account = #{login,jdbcType=INTEGER}
			</if>
			<if test="mt4Account !=null">
				and mt4Account like #{mt4Account,jdbcType=VARCHAR}
			</if>
			<if test="status !=null">
				and status = #{status,jdbcType=INTEGER}
			</if>


			<if test="guidList !=null">
				and guid in
				<foreach item="guid" index="index" collection="guidList" open="(" separator="," close=")">
					#{guid}
				</foreach>
			</if>
		</where>
	</select>

	<select id="getCommissionMonthByParams" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from tb_IB_commission_month
		<where>
			<if test="endTime !=null">
				and payment_date &lt;=  #{endTime, jdbcType=TIMESTAMP}
			</if>
			<if test="startTime !=null">
				and payment_date &gt;=  #{startTime, jdbcType=TIMESTAMP}
			</if>
			<if test="uid !=null">
				and user_id = #{uid,jdbcType=INTEGER}
			</if>
			<if test="login !=null">
				and mt4Account = #{login,jdbcType=INTEGER}
			</if>
			<if test="status !=null">
				and status = #{status,jdbcType=INTEGER}
			</if>
		</where>
		ORDER BY  payment_date desc ;
	</select>
    <select id="queryCountByUserIdAndMT4Account" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        COUNT (1)
        FROM tb_IB_commission_month
        WHERE user_id = #{userId, jdbcType=INTEGER}
        AND mt4Account = #{mt4account, jdbcType=INTEGER}
        AND payment_date &lt;= #{endTime, jdbcType=TIMESTAMP}
        AND status = 1
    </select>
    <select id="queryByUserIdAndMT4Account" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT TOP ${limit}
        <include refid="Base_Column_List"/>
        FROM tb_IB_commission_month
        WHERE user_id = #{userId, jdbcType=INTEGER}
        AND mt4Account = #{mt4account, jdbcType=INTEGER}
        AND payment_date &lt;= #{endTime, jdbcType=TIMESTAMP}
        AND status = 1
        <if test="offset gt 0">
            AND (
            (SELECT MIN(payment_date)
            FROM
                (SELECT TOP ${offset} payment_date
                FROM tb_IB_commission_month
                WHERE user_id = #{userId, jdbcType=INTEGER}
                AND mt4Account = #{mt4account, jdbcType=INTEGER}
                AND payment_date &lt;= #{endTime, jdbcType=TIMESTAMP}
                AND status = 1
                ORDER BY payment_date DESC) AS T) > payment_date
            )
        </if>
        ORDER BY payment_date DESC
    </select>
</mapper>