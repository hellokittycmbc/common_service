<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.task.dao.ITaskManageDao" >
  <resultMap id="BaseResultMap" type="com.fx.task.model.TaskManage" >
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="mt4_account" property="mt4Account" jdbcType="INTEGER" />
    <!--<result column="mt4_group_id" property="mt4GroupId" jdbcType="VARCHAR" />-->
    <result column="apply_type" property="applyType" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="refuseReason" property="refusereason" jdbcType="VARCHAR" />
    <result column="duty_officer" property="dutyOfficer" jdbcType="VARCHAR" />
    <result column="tid" property="tid" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, mt4_account, apply_type, apply_time, status, reason, refuseReason, duty_officer,tid,comment
  </sql>
  <sql id="Base_Column_ListMore" >
    t.user_id,t.mt4_account,t.apply_type,t.apply_time,t.status,t.reason,t.refuseReason,t.duty_officer,t.tid,t.comment
  </sql>
  <insert id="insert" parameterType="com.fx.task.model.TaskManage" >
    insert into task_manage (user_id, mt4_account, apply_type, 
      apply_time, status, reason, 
      refuseReason, duty_officer,tid,comment)
    values (#{userId,jdbcType=INTEGER}, #{mt4Account,jdbcType=INTEGER}, #{applyType,jdbcType=VARCHAR}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, 
      #{refusereason,jdbcType=VARCHAR}, #{dutyOfficer,jdbcType=VARCHAR}, #{tid,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR})
  </insert>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from task_manage
  </select>
  <select id="queryListByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
      /*WITH ib_list AS (
      SELECT
      t.superior_id,
      t.is_ibId,
      t.id,
      1 AS xLEVEL,
      t.is_del,
      t.cnName,
      t.mt4_datasource_type,
      t.phone_num,
      t.mt4_datasource_id
      FROM
      tb_user_register t
      WHERE
      t.id IN (
      SELECT
      u.id
      FROM
      tb_user_register u,
      tb_sys_organization org
      WHERE
      u.is_del = 0
      and u.org_id = org.id and u.website_user_type =6
      ${sqlMap.dsf}
      )
      AND t.is_del = 0
      UNION ALL
      SELECT
      c.superior_id,
      c.is_ibId,
      c.id,
      ib_list.xLEVEL + 1,
      c.is_del,
      c.cnName,
      c.mt4_datasource_type,
      c.phone_num,
      c.mt4_datasource_id
      FROM
      tb_user_register c
      INNER JOIN ib_list ON (c.superior_id = ib_list.id and c.website_user_type =6 )or(c.is_ibId = ib_list.id)
      )*/
    select top ${sqlMap.limit} t.* from task_manage t,
      (
          SELECT
            A.*
          FROM
              tb_user_register A,
              tb_user_register u1,
              tb_sys_organization org
          WHERE
              A.level_path.IsDescendantOf (u1.level_path) = 1
              AND A.is_del = 0
              AND u1.org_id = org.id
              AND u1.website_user_type = 6
              and u1.is_del = 0
              ${sqlMap.dsf}
      and u1.id not in (
      select a.id from
      (SELECT
      u1.*
      FROM
      tb_user_register u1,
      tb_sys_organization org
      WHERE
      u1.org_id = org.id
      and u1.website_user_type =6
      and u1.is_del = 0
      ${sqlMap.dsf}
      ) as a
      ,
      (SELECT
      u1.*
      FROM
      tb_user_register u1,
      tb_sys_organization org
      WHERE
      u1.org_id = org.id
      and u1.website_user_type =6
      and u1.is_del = 0
      ${sqlMap.dsf}
      ) as b
      where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
      )
      ) as A
      <where>
          t.user_id = A.id
              <if test="sqlMap.support!=null">
                  <if test="sqlMap.userq != null and sqlMap.userq !='' ">
                      and (A.cnName LIKE #{sqlMap.userq, jdbcType=VARCHAR}
                      OR t.mt4_account LIKE #{sqlMap.userq, jdbcType=INTEGER}
                      )
                  </if>
              </if>
              <if test="sqlMap.support==null">
                  <if test="sqlMap.userq != null and sqlMap.userq !='' ">
                      AND (  A.cnName LIKE #{sqlMap.userq, jdbcType=VARCHAR}
                      OR t.mt4_account LIKE #{sqlMap.userq, jdbcType=INTEGER}
                      )
                  </if>
              </if>
          <if test="sqlMap.statusq != -1 and sqlMap.statusq != null">
              and t.status = #{sqlMap.statusq, jdbcType=TINYINT}
          </if>
          <if test="sqlMap.applyType != '' and sqlMap.applyType != null">
              and t.apply_type = #{sqlMap.applyType, jdbcType=VARCHAR}
          </if>
          <if test="sqlMap.applyTypeList != null">
              and t.apply_type in
              <foreach item="applyType" index="index" collection="sqlMap.applyTypeList" open="(" separator="," close=")">
                  #{applyType}
              </foreach>
          </if>
    <if test="sqlMap.offset gt 0">
    and (
    	  (SELECT MIN(apply_time) FROM (SELECT TOP ${sqlMap.offset} t.apply_time from task_manage t,
        (
        SELECT
        A.*
        FROM
        tb_user_register A,
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        A.level_path.IsDescendantOf (u1.level_path) = 1
        AND A.is_del = 0
        AND u1.org_id = org.id
        AND u1.website_user_type = 6
        and u1.is_del = 0
        ${sqlMap.dsf}
        and u1.id not in (
        select a.id from
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as a
        ,
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as b
        where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
        )
        ) as A
        <where>
            t.user_id = A.id
            <if test="sqlMap.support!=null">
                <if test="sqlMap.userq != null and sqlMap.userq !='' ">
                    and (A.cnName LIKE #{sqlMap.userq, jdbcType=VARCHAR}
                    OR t.mt4_account LIKE #{sqlMap.userq, jdbcType=INTEGER}
                    )
                </if>
            </if>
            <if test="sqlMap.support==null">
                <if test="sqlMap.userq != null and sqlMap.userq !='' ">
                    AND (  A.cnName LIKE #{sqlMap.userq, jdbcType=VARCHAR}
                    OR t.mt4_account LIKE #{sqlMap.userq, jdbcType=INTEGER}
                    )
                </if>
            </if>
            <if test="sqlMap.statusq != -1 and sqlMap.statusq != null">
                and t.status = #{sqlMap.statusq, jdbcType=TINYINT}
            </if>
            <if test="sqlMap.applyType != '' and sqlMap.applyType != null">
                and t.apply_type = #{sqlMap.applyType, jdbcType=VARCHAR}
            </if>
            <if test="sqlMap.applyTypeList != null">
                and t.apply_type in
                <foreach item="applyType" index="index" collection="sqlMap.applyTypeList" open="(" separator="," close=")">
                    #{applyType}
                </foreach>
            </if>
        </where>
    	  ORDER BY  t.apply_time desc) AS T) >  t.apply_time
		)
    </if>
    </where>order by apply_time desc
  </select>
  <select id="queryCountByCondition" resultType="java.lang.Integer"  parameterType="java.util.Map">
SELECT count(*) from task_manage t,
      (
      SELECT
      A.*
      FROM
      tb_user_register A,
      tb_user_register u1,
      tb_sys_organization org
      WHERE
      A.level_path.IsDescendantOf (u1.level_path) = 1
      AND A.is_del = 0
      AND u1.org_id = org.id
      AND u1.website_user_type = 6
      and u1.is_del = 0
      ${sqlMap.dsf}
      and u1.id not in (
      select a.id from
      (SELECT
      u1.*
      FROM
      tb_user_register u1,
      tb_sys_organization org
      WHERE
      u1.org_id = org.id
      and u1.website_user_type =6
      and u1.is_del = 0
      ${sqlMap.dsf}
      ) as a
      ,
      (SELECT
      u1.*
      FROM
      tb_user_register u1,
      tb_sys_organization org
      WHERE
      u1.org_id = org.id
      and u1.website_user_type =6
      and u1.is_del = 0
      ${sqlMap.dsf}
      ) as b
      where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
      )
      ) as A
      <where>
          t.user_id = A.id
          <if test="sqlMap.support!=null">
              <if test="sqlMap.userq != null and sqlMap.userq !='' ">
                  and (A.cnName LIKE #{sqlMap.userq, jdbcType=VARCHAR}
                  OR t.mt4_account LIKE #{sqlMap.userq, jdbcType=INTEGER}
                  )
              </if>
          </if>
          <if test="sqlMap.support==null">
              <if test="sqlMap.userq != null and sqlMap.userq !='' ">
                  AND (  A.cnName LIKE #{sqlMap.userq, jdbcType=VARCHAR}
                  OR t.mt4_account LIKE #{sqlMap.userq, jdbcType=INTEGER}
                  )
              </if>
          </if>
          <if test="sqlMap.statusq != -1 and sqlMap.statusq != null">
              and t.status = #{sqlMap.statusq, jdbcType=TINYINT}
          </if>
          <if test="sqlMap.applyType != '' and sqlMap.applyType != null">
              and t.apply_type = #{sqlMap.applyType, jdbcType=VARCHAR}
          </if>
          <if test="sqlMap.applyTypeList != null">
              and t.apply_type in
              <foreach item="applyType" index="index" collection="sqlMap.applyTypeList" open="(" separator="," close=")">
                  #{applyType}
              </foreach>
          </if>
    </where>
  </select>
</mapper>