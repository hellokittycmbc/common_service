<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.user.dao.IInvestExperienceDao" >
  <resultMap id="BaseResultMap" type="com.fx.user.model.InvestExperience" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="investment_experience_code" property="investmentExperienceCode" jdbcType="INTEGER" />
    <result column="others_code" property="othersCode" jdbcType="INTEGER" />
    <result column="trading_frequency_code" property="tradingFrequencyCode" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="create_ip" property="createIp" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="update_ip" property="updateIp" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, investment_experience_code, others_code, trading_frequency_code, create_user, 
    create_time, create_ip, update_user, update_time, update_ip, is_del
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_invest_experience
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fx.user.model.InvestExperience" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_invest_experience (user_id, investment_experience_code, 
      others_code, trading_frequency_code, create_user, 
      create_time, create_ip, update_user, 
      update_time, update_ip, is_del
      )
    values (#{userId,jdbcType=INTEGER}, #{investmentExperienceCode,jdbcType=INTEGER}, 
      #{othersCode,jdbcType=INTEGER}, #{tradingFrequencyCode,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=CHAR}, #{createIp,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=CHAR}, #{updateIp,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fx.user.model.InvestExperience" >
    update tb_invest_experience
    set user_id = #{userId,jdbcType=INTEGER},
      investment_experience_code = #{investmentExperienceCode,jdbcType=INTEGER},
      others_code = #{othersCode,jdbcType=INTEGER},
      trading_frequency_code = #{tradingFrequencyCode,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      create_ip = #{createIp,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=CHAR},
      update_ip = #{updateIp,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_invest_experience
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getByUid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_invest_experience
    where user_id = #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_invest_experience
  </select>
  
  <select id="getByUidList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from tb_invest_experience
    <if test="idList != null">
    where user_id in  
    <foreach collection="uidList" item="uid" separator="," open="(" close=")">#{uid,jdbcType=INTEGER}</foreach>
    </if>
  </select>
</mapper>