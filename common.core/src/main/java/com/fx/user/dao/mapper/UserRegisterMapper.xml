<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" >
<mapper namespace="com.fx.user.dao.IUserRegisterDao">
    <resultMap id="BaseResultMap" type="com.fx.user.model.UserRegister">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone_num" property="phoneNum" jdbcType="VARCHAR"/>
        <result column="admin_type" property="adminType" jdbcType="TINYINT"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="DATE"/>
        <result column="login_num" property="loginNum" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="CHAR"/>
        <result column="create_ip" property="createIp" jdbcType="VARCHAR"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="CHAR"/>
        <result column="update_ip" property="updateIp" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="TINYINT"/>
        <result column="is_ib" property="is_ib" jdbcType="TINYINT"/>
        <result column="enName" property="enName" jdbcType="VARCHAR"/>
        <result column="cnName" property="cnName" jdbcType="VARCHAR"/>
        <result column="firstLanguage" property="firstLanguage" jdbcType="VARCHAR"/>
        <result column="whereKown" property="whereKown" jdbcType="VARCHAR"/>
        <result column="exExpression" property="exExpression" jdbcType="VARCHAR"/>
        <result column="is_ibId" property="is_ibId" jdbcType="TINYINT"/>
        <result column="is_ibName" property="is_ibName" jdbcType="TINYINT"/>
        <result column="ibName" property="ibName" jdbcType="VARCHAR"/>
        <result column="is_supervision" property="is_supervision" jdbcType="TINYINT"/>
        <result column="is_trading" property="is_trading" jdbcType="TINYINT"/>
        <result column="tradingNum" property="tradingNum" jdbcType="TINYINT"/>
        <result column="website_user_type" property="websiteUserType" jdbcType="TINYINT"/>
        <result column="agent_mt4Account" property="agent_mt4Account" jdbcType="INTEGER"/>
        <!-- IB用户审核状态  默认为0  未审核 -->
        <result column="ib_user_type" property="ibUserType" jdbcType="INTEGER"/>

        <result column="cust_cateId" property="custcateId" jdbcType="VARCHAR"/>
        <result column="sale_proId" property="saleproId" jdbcType="VARCHAR"/>
        <result column="cust_sourId" property="custsourId" jdbcType="VARCHAR"/>

        <result column="sell_Id" property="sellId" jdbcType="INTEGER"/>
        <result column="org_id" property="orgId" jdbcType="INTEGER"/>

        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="exExpression" property="exExpression" jdbcType="VARCHAR"/>
        <result column="mt4_datasource_type" property="mt4DatasourceType" jdbcType="INTEGER"/>
        <result column="mt4_datasource_id" property="mt4DataSourceId" jdbcType="INTEGER"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="superior_id" property="superior_id" jdbcType="INTEGER"/>
        <!-- 有效期 -->
        <result column="indate" property="indate" jdbcType="TIMESTAMP" />
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="lead_status" property="lead_status" jdbcType="VARCHAR"/>
        <result column="interest" property="interest" jdbcType="VARCHAR"/>
        <!-- sales comment -->
        <result column="sales_comment" property="salesComment" jdbcType="VARCHAR" />
        <!-- support comment -->
        <result column="support_comment" property="supportComment" jdbcType="VARCHAR" />
        <result column="update_edoc_time" property="updateEdocTime" jdbcType="CHAR"/>
        <result column="refuseReason" property="refuseReason" jdbcType="VARCHAR"/>
        <result column="level_num" property="levelNum" jdbcType="INTEGER"/>
        <result column="leads_flag" property="leadsFlag" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, password, email, phone_num, admin_type, last_login_time, login_num, status, create_user, create_time, create_ip, ib_user_type,
    update_user, agent_mt4Account, update_time, update_ip, is_del,is_ib,enName,cnName,firstLanguage,whereKown,exExpression,is_ibId,
    is_ibName,ibName,is_supervision,is_trading,tradingNum,website_user_type,cust_cateId,sale_proId,cust_sourId,sell_Id,title,
    mt4_datasource_type,mt4_datasource_id,org_id,salt,superior_id,indate,comment,lead_status,interest,sales_comment,
    support_comment, update_edoc_time, refuseReason, level_num, leads_flag
  </sql>
    <sql id="Base_Column_List_MoreTable">
        u1.id, u1.password,u1.email, u1.phone_num, u1.admin_type, u1.last_login_time, u1.login_num, u1.status, u1.create_user, u1.create_time, u1.create_ip, u1.ib_user_type,
        u1.update_user, u1.agent_mt4Account, u1.update_time, u1.update_ip, u1.is_del,u1.is_ib,u1.enName,u1.cnName,u1.firstLanguage,u1.whereKown,u1.exExpression,u1.is_ibId,
        u1.is_ibName,u1.ibName,u1.is_supervision,u1.is_trading,u1.tradingNum,u1.website_user_type,u1.cust_cateId,u1.sale_proId,u1.cust_sourId,u1.sell_Id,u1.title,
        u1.mt4_datasource_type,u1.mt4_datasource_id,u1.org_id,u1.salt,u1.superior_id,u1.indate,u1.comment,u1.lead_status,
        u1.interest,u1.sales_comment,u1.support_comment,u1.update_edoc_time,u1.refuseReason,u1.level_num, u1.leads_flag
    </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user_register
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.fx.user.model.UserRegister" useGeneratedKeys="true" keyProperty="id">
    insert into tb_user_register (password, email, phone_num, 
      admin_type, last_login_time, login_num, status, create_user, 
      create_time, create_ip, update_user, 
      update_time, update_ip, is_del,is_ib,enName,cnName,firstLanguage,
      whereKown,exExpression,is_ibId,is_ibName,ibName,is_supervision,is_trading,tradingNum,
      website_user_type,cust_cateId,sale_proId,cust_sourId,sell_Id,title, ib_user_type,
      mt4_datasource_type,mt4_datasource_id,agent_mt4Account,org_id,salt,superior_id,indate,comment,lead_status,interest,
      sales_comment, support_comment, update_edoc_time, refuseReason,leads_flag
      )
    values (#{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, 
      #{adminType,jdbcType=TINYINT}, #{lastLoginTime,jdbcType=DATE}, #{loginNum,jdbcType=INTEGER},
      #{status,jdbcType=TINYINT}, #{createUser,jdbcType=VARCHAR},
      #{createTime,jdbcType=CHAR}, #{createIp,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=CHAR}, #{updateIp,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT},
      #{is_ib,jdbcType=TINYINT}, #{enName,jdbcType=VARCHAR}, #{cnName,jdbcType=VARCHAR},
      #{firstLanguage,jdbcType=VARCHAR}, #{whereKown,jdbcType=VARCHAR}, #{exExpression,jdbcType=VARCHAR},
      #{is_ibId,jdbcType=TINYINT},#{is_ibName,jdbcType=TINYINT},#{ibName,jdbcType=VARCHAR},
      #{is_supervision,jdbcType=TINYINT},#{is_trading,jdbcType=TINYINT},#{tradingNum,jdbcType=TINYINT},
      #{websiteUserType,jdbcType=TINYINT}, #{custcateId,jdbcType=VARCHAR}, #{saleproId,jdbcType=VARCHAR},
      #{custsourId,jdbcType=VARCHAR}, #{sellId,jdbcType=INTEGER},#{title,jdbcType=VARCHAR},
      #{ibUserType, jdbcType=INTEGER},#{mt4DatasourceType,jdbcType=INTEGER},#{mt4DataSourceId,jdbcType=INTEGER},
      #{agent_mt4Account,jdbcType=INTEGER},#{orgId,jdbcType=INTEGER},#{salt,jdbcType=VARCHAR},#{superior_id,jdbcType=INTEGER},
      #{indate,jdbcType=TIMESTAMP}, #{comment,jdbcType=VARCHAR},#{lead_status,jdbcType=VARCHAR},#{interest,jdbcType=VARCHAR},
      #{salesComment,jdbcType=VARCHAR}, #{supportComment,jdbcType=VARCHAR},#{updateEdocTime,jdbcType=CHAR},
       #{refuseReason,jdbcType=VARCHAR}, #{leadsFlag,jdbcType=INTEGER}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.fx.user.model.UserRegister">
    update tb_user_register
    set password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      admin_type = #{adminType,jdbcType=TINYINT},
      last_login_time = #{lastLoginTime,jdbcType=DATE},
      login_num = #{loginNum,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      create_ip = #{createIp,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=CHAR},
      update_ip = #{updateIp,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT},
      is_ib = #{is_ib,jdbcType=TINYINT},
      enName = #{enName,jdbcType=VARCHAR},
      cnName = #{cnName,jdbcType=VARCHAR},
      firstLanguage = #{firstLanguage,jdbcType=VARCHAR},
      whereKown = #{whereKown,jdbcType=VARCHAR},
      exExpression = #{exExpression,jdbcType=VARCHAR},
      is_ibId = #{is_ibId,jdbcType=TINYINT},
      is_ibName = #{is_ibName,jdbcType=TINYINT},
      ibName = #{ibName,jdbcType=VARCHAR},
      is_supervision = #{is_supervision,jdbcType=TINYINT},
      is_trading = #{is_trading,jdbcType=TINYINT},
      tradingNum = #{tradingNum,jdbcType=TINYINT},
      website_user_type = #{websiteUserType,jdbcType=TINYINT},
      cust_cateId = #{custcateId,jdbcType=VARCHAR},
      sale_proId = #{saleproId,jdbcType=VARCHAR},
      cust_sourId = #{custsourId,jdbcType=VARCHAR},
      sell_Id= #{sellId,jdbcType=INTEGER},
      title=#{title,jdbcType=VARCHAR},
      ib_user_type=#{ibUserType, jdbcType=INTEGER},
      mt4_datasource_type = #{mt4DatasourceType,jdbcType=INTEGER},
      mt4_datasource_id = #{mt4DataSourceId,jdbcType=INTEGER},
      agent_mt4Account = #{agent_mt4Account,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=INTEGER},
      salt = #{salt,jdbcType=VARCHAR},
      superior_id=#{superior_id,jdbcType=INTEGER},
      indate=#{indate,jdbcType=TIMESTAMP},
      comment=#{comment,jdbcType=VARCHAR},
      lead_status=#{lead_status,jdbcType=VARCHAR},
      interest=#{interest,jdbcType=VARCHAR},
      sales_comment=#{salesComment,jdbcType=VARCHAR},
      support_comment=#{supportComment,jdbcType=VARCHAR},
      update_edoc_time=#{updateEdocTime,jdbcType=CHAR},
      refuseReason = #{refuseReason,jdbcType=VARCHAR},
      leads_flag = #{leadsFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where id = #{id,jdbcType=INTEGER}
        and is_del = 0
    </select>
    <select id="getByDemoEmail" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where email = #{email,jdbcType=VARCHAR} and website_user_type=1
        and is_del = 0 and mt4_datasource_type = #{mt4dataSourceType, jdbcType=INTEGER}
    </select>

    <select id="getByLiveEmail" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where email = #{email,jdbcType=VARCHAR} and (website_user_type = 2 or website_user_type = 5)
        and is_del = 0
    </select>

    <select id="getLeadsExist" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where  is_del = 0 and ( 1=2
        <if test="email != null ">
            or email = #{email}
        </if>
        <if test="phoneNum != null and phoneNum != '' ">
            or phone_num = #{phoneNum}
        </if>
        )

    </select>

    <select id="getLiveByEmailAndMt4DataSourceType" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where email = #{email,jdbcType=VARCHAR} and website_user_type != 1
        and is_del = 0
        <if test="mt4dataSourceType != null">
            and mt4_datasource_type = #{mt4dataSourceType, jdbcType=INTEGER}
        </if>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0
        order by id desc
    </select>
    <select id="getByIdList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        <if test="idList != null">
            where id in
            <foreach collection="idList" item="id" separator="," open="(" close=")">#{id,jdbcType=INTEGER}</foreach>
        </if>
        <if test="dataSource != null and dataSource > 0">
            and mt4_datasource_id = #{sqlMap.dataSource, jdbcType=INTEGER}
        </if>
    </select>
    <select id="queryCountIbByCondition" resultType="java.lang.Integer" parameterType="java.util.Map">
        select
        count(1)
        from tb_user_register
        where is_del = 0 and website_user_type = 5
        <if test="status != null">
            <if test="status != -1">
                and status = #{status, jdbcType=TINYINT}
            </if>
        </if>
        <if test="enName != null">
            and cnName like #{enName, jdbcType=VARCHAR}
        </if>
    </select>
    <select id="pageQueryIbByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
        select top ${limit}
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0 and website_user_type = 5
        <if test="status != null">
            <if test="status != -1">
                and status = #{status, jdbcType=TINYINT}
            </if>
        </if>
        <if test="enName != null">
            and cnName like #{enName, jdbcType=VARCHAR}
        </if>
        <if test="offset gt 0">
            and (
            (SELECT MIN(id) FROM (SELECT TOP ${offset} id FROM tb_user_register
            where is_del=0 and website_user_type = 5
            <if test="status != null">
                <if test="status != -1">
                    and status = #{status,jdbcType=TINYINT}
                </if>
            </if>
            <if test="enName != null">
                and cnName like #{enName, jdbcType=VARCHAR}
            </if>
            ORDER BY id desc) AS T) > id
            )
        </if>
        order by id desc
    </select>
    <select id="getIBUserRegister" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where website_user_type = #{websiteUserType,jdbcType=INTEGER}
        and is_del = 0 and ib_user_type = 1
        order by id desc
    </select>
    <!--用户导出查询方法 Rock 张小磊-->
    <select id="getUserRegisterByWebSiteType" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        <if test="idList != null and idList.size()  &gt;0 ">
            where website_user_type in
            <foreach item="userType" index="index" collection="idList" open="(" separator="," close=")">
                #{userType}
            </foreach>
        </if>
        and is_del = 0  and ib_user_type = 1   order by id desc
    </select>


    <select id="getUserRegisterBySuperId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0 and superior_id = #{superiorId,jdbcType=TINYINT}
    </select>
    
    <select id="getUserRegisterByIbId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0 and is_ibId = #{userId,jdbcType=TINYINT}
    </select>

    <select id="getUserRegisterByStatus" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0 and is_ibId = #{ibId,jdbcType=TINYINT} and website_user_type>=5
    </select>

    <select id="queryCountDemoByCondition" resultType="java.lang.Integer" parameterType="java.util.Map">
    select
    count(1)
    from tb_user_register
    where is_del = 0 and website_user_type = 1
  </select>
    <select id="pageQueryDemoByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
        select top ${limit}
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0 and website_user_type = 1
        <if test="offset gt 0">
            and (
            (SELECT MIN(id) FROM (SELECT TOP ${offset} id FROM tb_user_register
            where is_del=0 and website_user_type = 1
            ORDER BY id desc) AS T) > id
            )
        </if>
        order by id desc
    </select>
    <select id="queryRegEmailRepeat" parameterType="java.util.Map" resultType="Integer">
    SELECT
    COUNT(1)
    FROM tb_user_register
    WHERE email = #{email,jdbcType=VARCHAR} and website_user_type != 1 AND is_del = 0  and mt4_datasource_type = #{dataSourceType,jdbcType=INTEGER}
  </select>
    <!-- 判断内部用户名字是否重复-->
    <select id="queryRegenNameRepeat" parameterType="java.lang.String" resultType="Integer">
    SELECT
    COUNT(1)
    FROM tb_user_register
    WHERE cnName = #{enName,jdbcType=VARCHAR} AND is_del = 0 and website_user_type = 6
  </select>

    <select id="pageQueryCount" resultType="java.lang.Integer" parameterType="com.fx.user.model.UserRegister">
         select
        count(A.id)
        FROM
        tb_user_register A ,tb_user_register u1, tb_sys_organization org
        WHERE ( A.level_path.IsDescendantOf(u1.level_path)=1)
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        and u1.id not in (
        select a.id from
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as a
        ,
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as b
        where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
        )
        <if test="webSiteUserTypeList != null and webSiteUserTypeList.size() &gt;0">
            and ( A.website_user_type in
            <foreach item="userType" index="index" collection="webSiteUserTypeList" open="(" separator="," close=")">
                <if test="userType !=2">
                    #{userType}
                </if>
            </foreach>
            <if test="leadsFlag != null and leadsFlag &gt;0">
                or ( A.leads_flag = 1 and A.website_user_type=2 )
            </if>
            <if test="leadsFlag == null or leadsFlag &lt;=0">
                or ( A.website_user_type=2 )
            </if>
            )
        </if>


        <if test="sqlMap.status != null">
            <if test="sqlMap.status != -1">
                and A.status = #{sqlMap.status, jdbcType=TINYINT}
            </if>
        </if>
        <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
            and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.ibId, jdbcType=INTEGER})) = 1
        </if>
        <if test="sqlMap.support!=null">
            <if test="sqlMap.enName != null">
                and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                or A.id in (select uid from tb_user_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                )
            </if>
        </if>
        <if test="sqlMap.support==null">
            <if test="sqlMap.enName != null">
                and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                or A.id in (select uid from tb_user_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                )
            </if>
        </if>
        <if test="sqlMap.agentUserList!=null">
            <if test="sqlMap.agentUserList.size()==0">
                and A.is_ibId in ('')
            </if>
            <if test="sqlMap.agentUserList.size()&gt;0">
                and A.is_ibId in
                <foreach item="agentUser" index="index" collection="sqlMap.agentUserList" open="(" separator="," close=")">
                    #{agentUser.id}
                </foreach>
            </if>

        </if>
        <if test="sqlMap.ibId != null and sqlMap.flagIbid !=null ">
            and A.is_ibId = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.agentId != null and sqlMap.agentId >= 0">
            and A.is_ibId = #{sqlMap.agentId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.dataSource != null and sqlMap.dataSource > 0">
            and A.mt4_datasource_id = #{sqlMap.dataSource, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.custcateId != null and sqlMap.custcateId != 0">
            and A.cust_cateId = #{sqlMap.custcateId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.lead_status != null ">
            and A.lead_status = #{sqlMap.lead_status, jdbcType=VARCHAR}
        </if>
        <if test="lead_status != null">
            and A.lead_status is not null
        </if>
        <if test="sqlMap.interest != null ">
            and A.interest = #{sqlMap.interest, jdbcType=VARCHAR}
        </if>
        <if test="sqlMap.orgId != null ">
            and A.org_id in  (${sqlMap.orgId})
        </if>
        <if test="sqlMap.notcustcateId != null and sqlMap.notcustcateId != 0">
            and A.cust_cateId != #{sqlMap.notcustcateId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.salestime_QUERY_EQUALS != null ">
            and A.id in (select user_id from tb_sales_info where next_interview_date BETWEEN
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.salestime_QUERY_MORE != null">
            and A.id in (select user_id from tb_sales_info where next_interview_date &gt;
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.salestime_QUERY_LESS != null">
            and A.id in (select user_id from tb_sales_info where next_interview_date &lt;
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.startTime != null and sqlMap.endTime != null and (sqlMap.returnTime > 0 or sqlMap.returnTime = -6)">
            <if test="sqlMap.returnTime != 2 and sqlMap.returnTime != 3 ">
                and A.id in (select user_id from tb_sales_info where next_interview_date BETWEEN
                #{sqlMap.startTime, jdbcType=TIMESTAMP} and #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
            <if test="sqlMap.returnTime == 2 or sqlMap.returnTime == 3 ">
                and A.id in (select user_id from tb_sales_info where next_interview_date &lt;
                #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
        </if>

    </select>
    <select id="pageQueryList" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        SELECT
        top ${sqlMap.limit} A.*
        FROM
        tb_user_register A ,tb_user_register u1, tb_sys_organization org
        WHERE ( A.level_path.IsDescendantOf(u1.level_path)=1 )
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        and u1.id not in (
        select a.id from
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as a
        ,
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as b
        where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
        )

        <if test="webSiteUserTypeList != null and webSiteUserTypeList.size()  &gt;0">
            and ( A.website_user_type in
            <foreach item="userType" index="index" collection="webSiteUserTypeList" open="(" separator="," close=")">
                <if test="userType !=2">
                    #{userType}
                </if>
            </foreach>
            <if test="leadsFlag != null and leadsFlag &gt;0">
                or ( A.leads_flag = 1 and A.website_user_type=2 )
            </if>
            <if test="leadsFlag == null or leadsFlag &lt;=0">
                or ( A.website_user_type=2 )
            </if>
            )
        </if>
        <if test="sqlMap.status != null">
            <if test="sqlMap.status != -1">
                and A.status = #{sqlMap.status, jdbcType=TINYINT}
            </if>
        </if>
        <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
            and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.ibId, jdbcType=INTEGER})) = 1
        </if>
        <if test="sqlMap.support!=null">
            <if test="sqlMap.enName != null">
                and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                or A.id in (select uid from tb_user_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                )
            </if>
        </if>
        <if test="sqlMap.support==null">
            <if test="sqlMap.enName != null">
                and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                or A.id in (select uid from tb_user_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                )
            </if>
        </if>
        <if test="sqlMap.agentUserList!=null">
            <if test="sqlMap.agentUserList.size()==0">
                and A.is_ibId in ('')
            </if>
            <if test="sqlMap.agentUserList.size()&gt;0">
                and A.is_ibId in
                <foreach item="agentUser" index="index" collection="sqlMap.agentUserList" open="(" separator="," close=")">
                    #{agentUser.id}
                </foreach>
            </if>

        </if>
        <if test="sqlMap.ibId != null and sqlMap.flagIbid !=null ">
            and A.is_ibId = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.agentId != null and sqlMap.agentId >= 0">
            and A.is_ibId = #{sqlMap.agentId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.dataSource != null and sqlMap.dataSource > 0">
            and A.mt4_datasource_id = #{sqlMap.dataSource, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.custcateId != null and sqlMap.custcateId != 0">
            and A.cust_cateId = #{sqlMap.custcateId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.lead_status != null ">
            and A.lead_status = #{sqlMap.lead_status, jdbcType=VARCHAR}
        </if>
        <if test="lead_status != null">
            and A.lead_status is not null
        </if>
        <if test="sqlMap.interest != null ">
            and A.interest = #{sqlMap.interest, jdbcType=VARCHAR}
        </if>
        <if test="sqlMap.orgId != null ">
            and A.org_id in  (${sqlMap.orgId})
        </if>
        <if test="sqlMap.notcustcateId != null and sqlMap.notcustcateId != 0">
            and A.cust_cateId != #{sqlMap.notcustcateId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.salestime_QUERY_EQUALS != null ">
            and A.id in (select user_id from tb_sales_info where next_interview_date BETWEEN
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.salestime_QUERY_MORE != null">
            and A.id in (select user_id from tb_sales_info where next_interview_date &gt;
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.salestime_QUERY_LESS != null">
            and A.id in (select user_id from tb_sales_info where next_interview_date &lt;
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.startTime != null and sqlMap.endTime != null and (sqlMap.returnTime > 0 or sqlMap.returnTime = -6)">
            <if test="sqlMap.returnTime != 2 and sqlMap.returnTime != 3 ">
                and A.id in (select user_id from tb_sales_info where next_interview_date BETWEEN
                #{sqlMap.startTime, jdbcType=TIMESTAMP} and #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
            <if test="sqlMap.returnTime == 2 or sqlMap.returnTime == 3 ">
                and A.id in (select user_id from tb_sales_info where next_interview_date &lt;
                #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
        </if>
        <if test="sqlMap.offset gt 0">
            and (
            (SELECT MIN(id) FROM (SELECT TOP ${sqlMap.offset}  A.id
            from tb_user_register A ,tb_user_register u1, tb_sys_organization org
            WHERE A.level_path.IsDescendantOf(u1.level_path)=1
            and A.is_del = 0
            and u1.org_id = org.id
            and u1.website_user_type =6
            and u1.is_del = 0
            ${sqlMap.dsf}
            and u1.id not in (
            select a.id from
            (SELECT
            u1.*
            FROM
            tb_user_register u1,
            tb_sys_organization org
            WHERE
            u1.org_id = org.id
            and u1.website_user_type =6
            and u1.is_del = 0
            ${sqlMap.dsf}
            ) as a
            ,
            (SELECT
            u1.*
            FROM
            tb_user_register u1,
            tb_sys_organization org
            WHERE
            u1.org_id = org.id
            and u1.website_user_type =6
            and u1.is_del = 0
            ${sqlMap.dsf}
            ) as b
            where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
            )
            <if test="webSiteUserTypeList != null and webSiteUserTypeList.size()  &gt;0">
                and ( A.website_user_type in
                <foreach item="userType" index="index" collection="webSiteUserTypeList" open="(" separator=","
                         close=")">
                    <if test="userType !=2">
                        #{userType}
                    </if>
                </foreach>
                <if test="leadsFlag != null and leadsFlag &gt;0">
                    or ( A.leads_flag = 1 and A.website_user_type=2 )
                </if>
                <if test="leadsFlag == null or leadsFlag &lt;=0">
                    or ( A.website_user_type=2 )
                </if>
                )
            </if>
            <if test="sqlMap.status != null">
                <if test="sqlMap.status != -1">
                    and A.status = #{sqlMap.status, jdbcType=TINYINT}
                </if>
            </if>
            <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
                and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.ibId, jdbcType=INTEGER})) = 1
            </if>
            <if test="sqlMap.support!=null">
                <if test="sqlMap.enName != null">
                    and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                    or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                    or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                    or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                    or A.id in (select uid from tb_user_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                    )
                </if>
            </if>
            <if test="sqlMap.support==null">
                <if test="sqlMap.enName != null">
                    and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                    or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                    or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                    or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                    or A.id in (select uid from tb_user_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                    )
                </if>
            </if>
            <if test="sqlMap.agentUserList!=null">
                <if test="sqlMap.agentUserList.size()==0">
                    and A.is_ibId in ('')
                </if>
                <if test="sqlMap.agentUserList.size()&gt;0">
                    and A.is_ibId in
                    <foreach item="agentUser" index="index" collection="sqlMap.agentUserList" open="(" separator="," close=")">
                        #{agentUser.id}
                    </foreach>
                </if>

            </if>
            <if test="sqlMap.ibId != null and sqlMap.flagIbid !=null ">
                and A.is_ibId = #{sqlMap.ibId, jdbcType=INTEGER}
            </if>
            <if test="sqlMap.agentId != null and sqlMap.agentId >= 0">
                and A.is_ibId = #{sqlMap.agentId, jdbcType=INTEGER}
            </if>
            <if test="sqlMap.dataSource != null and sqlMap.dataSource > 0">
                and A.mt4_datasource_id = #{sqlMap.dataSource, jdbcType=INTEGER}
            </if>
            <if test="sqlMap.custcateId != null and sqlMap.custcateId != 0">
                and A.cust_cateId = #{sqlMap.custcateId, jdbcType=INTEGER}
            </if>
            <if test="sqlMap.lead_status != null ">
                and A.lead_status = #{sqlMap.lead_status, jdbcType=VARCHAR}
            </if>
            <if test="sqlMap.interest != null ">
                and A.interest = #{sqlMap.interest, jdbcType=VARCHAR}
            </if>
            <if test="sqlMap.orgId != null ">
                and A.org_id in  (${sqlMap.orgId})
            </if>
            <if test="sqlMap.notcustcateId != null and sqlMap.notcustcateId != 0">
                and A.cust_cateId != #{sqlMap.notcustcateId, jdbcType=INTEGER}
            </if>
            <if test="sqlMap.salestime_QUERY_EQUALS != null ">
                and A.id in (select user_id from tb_sales_info where next_interview_date BETWEEN
                #{sqlMap.startTime, jdbcType=TIMESTAMP} and #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
            <if test="sqlMap.salestime_QUERY_MORE != null">
                and A.id in (select user_id from tb_sales_info where next_interview_date &gt;
                #{sqlMap.startTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
            <if test="sqlMap.salestime_QUERY_LESS != null">
                and A.id in (select user_id from tb_sales_info where next_interview_date &lt;
                #{sqlMap.startTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
            <if test="sqlMap.startTime != null and sqlMap.endTime != null and (sqlMap.returnTime > 0 or sqlMap.returnTime = -6)">
                <if test="sqlMap.returnTime != 2 and sqlMap.returnTime != 3 ">
                    and A.id in (select user_id from tb_sales_info where next_interview_date BETWEEN
                    #{sqlMap.startTime, jdbcType=TIMESTAMP} and #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
                </if>
                <if test="sqlMap.returnTime == 2 or sqlMap.returnTime == 3 ">
                    and A.id in (select user_id from tb_sales_info where next_interview_date &lt;
                    #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
                </if>
            </if>
            ORDER BY A.id desc) AS T) > A.id
            )
        </if>
        order by A.id desc
    </select>
    <select id="pageQueryList2" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0 AND (website_user_type =1 or website_user_type =2 )
        <if test="status != null">
            <if test="status != -1">
                and status = #{status, jdbcType=TINYINT}
            </if>
        </if>
        <if test="enName != null">
            and cnName like #{enName, jdbcType=VARCHAR}
        </if>
        order by id desc
    </select>

    <update id="deleteById" parameterType="com.fx.user.model.UserRegister">
   update tb_user_register
    set update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=CHAR},
      update_ip = #{updateIp,jdbcType=VARCHAR},
      is_del = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="getAllUsers" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT * FROM tb_user_register t WHERE ((t.website_user_type = 5 and t.ib_user_type = 1) OR t.website_user_type = 6) AND t.is_del = 0
    </select>
    <update id="modifyIbUserTypeById" parameterType="java.util.Map">
    update tb_user_register
    set ib_user_type = #{ibUserType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectUserRegister" resultType="com.fx.user.model.UserRegister" parameterType="java.util.Map">
      select
      *
      from
      tb_user_register
      where id = #{id, jdbcType=INTEGER}
      and is_del = 0
  </select>
    <select id="selectCountByIsIbId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select count(*) from tb_user_register where is_ibid = #{is_ibid,jdbcType=INTEGER} and  is_del = 0
  </select>
    <select id="getAllibidsByUpperIB" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        WITH tree AS (
        SELECT
        t.is_ibId,
        t.id,
        1 AS xLEVEL,
        t.cnName,
        t.email,
        t.phone_num,
        t.create_time,
        t.is_del,
        t.mt4_datasource_type
        FROM
        tb_user_register t
        WHERE
        t.is_ibId = #{userId,jdbcType=INTEGER} and is_ib=1 and is_del=0
        <if test="mt4DatasourceType != null">
        </if>
        UNION ALL
        SELECT
        c.is_ibId,
        c.id,
        tree.xLEVEL + 1,
        c.cnName,
        c.email,
        c.phone_num,
        c.create_time,
        c.is_del,
        c.mt4_datasource_type
        FROM
        tb_user_register c
        INNER JOIN tree ON c.is_ibId = tree.id
        )
        SELECT A.id FROM tree A WHERE A.is_del = 0
        <if test="mt4DatasourceType != null">
            and A.mt4_datasource_type = #{mt4DatasourceType, jdbcType=INTEGER}
        </if>
    </select>

    <select id="getAllSales" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0
        and website_user_type = 6
    </select>

    <select id="getParentUsersByRoleIdAndDataSourceId" resultMap="BaseResultMap" parameterType="java.util.Map">
    select * from tb_user_register t where t.id IN
      (select u.user_id from tb_user u where u.roleid in
        (select r.id from tb_role r where r.level =
          (select t.level-1 from tb_role t where t.id = #{roleId, jdbcType=TINYINT} and t.status = '1' and t.is_del = 0 and t.role_type = 2)
            and r.status = '1' and r.is_del = 0 and r.role_type = 2) and u.is_del = 0 and u.is_ib = 1 and ib_user_type = 1) and t.is_del = 0 and t.mt4_datasource_id=#{dataSourceId,jdbcType=INTEGER};
  </select>
    <select id="getUpperIBAndSalesByDataSource" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT * FROM tb_user_register t WHERE ((t.website_user_type = 5 and t.ib_user_type = 1 and mt4_datasource_id= #{dataSourceId,jdbcType=INTEGER}) OR t.website_user_type = 6) AND t.is_del = 0
    </select>
    <select id="getIBUsersByIbId" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from
        tb_user_register
        where is_del = 0
        and website_user_type = 5
        and is_ibId = #{ibId, jdbcType=INTEGER}
    </select>
    <select id="getById" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where id = #{uid,jdbcType=INTEGER}
        and is_del = 0
        <if test="dataSourceId != null ">
            and mt4_datasource_id = #{dataSourceId, jdbcType=INTEGER}
        </if>
    </select>
    <select id="getUserRegisterCount" resultType="java.lang.Integer" parameterType="com.fx.user.model.UserRegister">
        WITH ib_list AS (
        SELECT
        t.superior_id,
        t.id,
        1 AS xLEVEL,
        t.is_del,
        t.mt4_datasource_type,
        t.mt4_datasource_id
        FROM
        tb_user_register t
        WHERE
        t.is_del = 0
        <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
            and t.superior_id = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.ibId == null or sqlMap.ibId &lt;= 0">
            AND t.id IN (
            SELECT
            u.id
            FROM
            tb_user_register u,
            tb_sys_organization org
            WHERE
            u.is_del = 0
            and u.org_id = org.id and u.website_user_type =6
            ${sqlMap.dsf}
            )
        </if>
        UNION ALL
        SELECT
        c.superior_id,
        c.id,
        ib_list.xLEVEL + 1,
        c.is_del,
        c.mt4_datasource_type,
        c.mt4_datasource_id
        FROM
        tb_user_register c
        INNER JOIN ib_list ON c.superior_id = ib_list.id and c.website_user_type =6
        )
        SELECT
        count(u1.id)
        FROM
        tb_user_register u1
        WHERE u1.is_del = 0
        and u1.id in (SELECT  id from ib_list A)
        and u1.website_user_type = #{websiteUserType,jdbcType=INTEGER}
        <if test="sqlMap.support!=null">
            and (u1.cnName = #{sqlMap.keyword, jdbcType=VARCHAR} or u1.phone_num = #{sqlMap.keyword, jdbcType=VARCHAR} or u1.email = #{sqlMap.keyword, jdbcType=VARCHAR}
            or u1.id in(select uid from tb_user_mt4_account where is_del = 0 and  mt4_account like #{sqlMap.keyword, jdbcType=VARCHAR})
            or u1.id in(select uid from tb_user_account where is_del = 0 and  mt4_account like #{sqlMap.keyword, jdbcType=VARCHAR}))
        </if>
        <if test="sqlMap.support==null">
            <if test="sqlMap.keyword!=null">
                and u1.cnName like #{sqlMap.keyword, jdbcType=VARCHAR}
            </if>
        </if>

        <if test="sqlMap.ibId!=null and sqlMap.flagIbid != null">
            and u1.superior_id = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
    </select>
    <select id="getUserRegister" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        WITH ib_list AS (
        SELECT
        t.superior_id,
        t.id,
        1 AS xLEVEL,
        t.is_del,
        t.mt4_datasource_type,
        t.mt4_datasource_id
        FROM
        tb_user_register t
        WHERE
        t.is_del = 0
        <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
            and t.superior_id = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.ibId == null or sqlMap.ibId &lt;= 0">
            AND t.id IN (
            SELECT
            u.id
            FROM
            tb_user_register u,
            tb_sys_organization org
            WHERE
            u.is_del = 0
            and u.org_id = org.id and u.website_user_type =6
            ${sqlMap.dsf}
            )
        </if>
        UNION ALL
        SELECT
        c.superior_id,
        c.id,
        ib_list.xLEVEL + 1,
        c.is_del,
        c.mt4_datasource_type,
        c.mt4_datasource_id
        FROM
        tb_user_register c
        INNER JOIN ib_list ON c.superior_id = ib_list.id and c.website_user_type =6
        )
        SELECT
        top ${sqlMap.limit}
        <include refid="Base_Column_List_MoreTable"/>
        FROM
        tb_user_register u1
        WHERE u1.is_del = 0
        and u1.id in (SELECT  id from ib_list A)
        and u1.website_user_type = #{websiteUserType,jdbcType=INTEGER}
        <if test="sqlMap.support!=null">
            and (u1.cnName like #{sqlMap.keyword, jdbcType=VARCHAR} or u1.phone_num = #{sqlMap.keyword, jdbcType=VARCHAR} or u1.email = #{sqlMap.keyword, jdbcType=VARCHAR}
            or u1.id in(select uid from tb_user_mt4_account where is_del = 0 and  mt4_account like #{sqlMap.keyword, jdbcType=VARCHAR})
            or u1.id in(select uid from tb_user_account where is_del = 0 and  mt4_account like #{sqlMap.keyword, jdbcType=VARCHAR}))
        </if>
        <if test="sqlMap.support==null">
            <if test="sqlMap.keyword!=null">
                and u1.cnName like #{sqlMap.keyword, jdbcType=VARCHAR}
            </if>
        </if>
        <if test="sqlMap.ibId!=null and sqlMap.flagIbid != null">
            and u1.superior_id = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.offset gt 0">
            and (
            (SELECT
            MIN(id) FROM (SELECT  TOP ${sqlMap.offset}  u2.id
            FROM
            tb_user_register u2
            WHERE u2.is_del = 0
            and u2.id in (SELECT  id from ib_list A)
            and u2.website_user_type = #{websiteUserType,jdbcType=INTEGER}
            <if test="sqlMap.support!=null">
                and (u1.cnName like #{sqlMap.keyword, jdbcType=VARCHAR} or u1.phone_num = #{sqlMap.keyword, jdbcType=VARCHAR} or u1.email = #{sqlMap.keyword, jdbcType=VARCHAR}
                or u1.id in(select uid from tb_user_mt4_account where is_del = 0 and  mt4_account like #{sqlMap.keyword, jdbcType=VARCHAR})
                or u1.id in(select uid from tb_user_account where is_del = 0 and  mt4_account like #{sqlMap.keyword, jdbcType=VARCHAR}))
            </if>
            <if test="sqlMap.support==null">
                <if test="sqlMap.keyword!=null">
                    and u1.cnName like #{sqlMap.keyword, jdbcType=VARCHAR}
                </if>
            </if>
            <if test="sqlMap.ibId!=null and sqlMap.flagIbid != null">
                and u2.superior_id = #{sqlMap.ibId, jdbcType=INTEGER}
            </if>
            ORDER BY u2.id desc) AS T) > u1.id
            )
        </if>
        order by u1.id desc
    </select>

    <select id="getByWebsiteUserTypess" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        tb_user_register
        WHERE is_del = 0
        and website_user_type = #{websiteUserType,jdbcType=INTEGER}
        ORDER by id desc
    </select>
    <select id="getAllIBUserByDataSource" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tb_user_register
        WHERE is_del = 0
        AND website_user_type = 5
        AND ib_user_type = 1
        AND mt4_datasource_id = #{dataSource, jdbcType=INTEGER}
    </select>

    <select id="findUserByOrgId" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        SELECT
        A.*
        FROM
        tb_user_register A ,tb_user_register u1, tb_sys_organization org
        WHERE A.level_path.IsDescendantOf(u1.level_path)=1
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.org_id = #{orgId, jdbcType=INTEGER}
        and u1.website_user_type =6
        and u1.is_del = 0
         ${sqlMap.dsf}
        and u1.id not in (
            select a.id from
                (SELECT
                        u1.*
                    FROM
                        tb_user_register u1,
                        tb_sys_organization org
                    WHERE
                        u1.org_id = org.id
                        and u1.org_id = #{orgId, jdbcType=INTEGER}
                        and u1.website_user_type =6
                        and u1.is_del = 0
                         ${sqlMap.dsf}
                  ) as a
                ,
                (SELECT
                         u1.*
                    FROM
                        tb_user_register u1,
                        tb_sys_organization org
                    WHERE
                        u1.org_id = org.id
                        and u1.org_id = #{orgId, jdbcType=INTEGER}
                        and u1.website_user_type =6
                        and u1.is_del = 0
                         ${sqlMap.dsf}
                ) as b
                where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
        )
      and A.website_user_type = 6
      and A.org_id = #{orgId, jdbcType=INTEGER}
      ORDER by A.id desc
    </select>

    <select id="findIBByParentId" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        SELECT
        u1.id, u1.password, u1.email, u1.phone_num, u1.admin_type, u1.last_login_time, u1.login_num, u1.status,
        u1.create_user, u1.create_time, u1.create_ip, u1.ib_user_type, u1.update_user, u1.agent_mt4Account,
        u1.update_time, u1.update_ip, u1.is_del, u1.is_ib, u1.cnName, u1.cnName, u1.firstLanguage, u1.whereKown,
        u1.exExpression, u1.is_ibId, u1.is_ibName, u1.ibName, u1.is_supervision, u1.is_trading, u1.tradingNum,
        u1.website_user_type, u1.cust_cateId, u1.sale_proId, u1.cust_sourId, u1.sell_Id, u1.title,
        u1.mt4_datasource_type, u1.mt4_datasource_id, u1.org_id,u1.salt
        FROM
        tb_user_register u1
        WHERE u1.is_del = 0
        and u1.website_user_type = 5
        and u1.ib_user_type = 1
        and u1.is_ibid = #{is_ibId, jdbcType=INTEGER}
        <if test="mt4DataSourceId != 0 ">
            and u1.mt4_datasource_id = #{mt4DataSourceId, jdbcType=INTEGER}
        </if>
        ORDER by u1.id desc
    </select>
    <select id="getLiveByEmailAndMt4DataSourceId" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where email = #{email,jdbcType=VARCHAR} and website_user_type != 1
        and is_del = 0  and mt4_datasource_id = #{mt4dataSourceId, jdbcType=INTEGER}
    </select>
    <select id="customersExportDownload" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        select
        A.*
        from tb_user_register A,tb_user_register u1, tb_sys_organization org
        WHERE (A.level_path.IsDescendantOf(u1.level_path)=1 )
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        and u1.id not in (
        select a.id from
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as a
        ,
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as b
        where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
        )
        <if test="webSiteUserTypeList != null and webSiteUserTypeList.size() &gt;0">
            and A.website_user_type in
            <foreach item="userType" index="index" collection="webSiteUserTypeList" open="(" separator="," close=")">
                #{userType}
            </foreach>
        </if>
        <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
            and A.level_path.IsDescendantOf( (select level_path from tb_user_register where id = #{sqlMap.ibId, jdbcType=INTEGER}))=1
        </if>
        <if test="sqlMap.status != null">
            <if test="sqlMap.status != -1">
                and A.status = #{sqlMap.status, jdbcType=TINYINT}
            </if>
        </if>
        <if test="sqlMap.support!=null">
            <if test="sqlMap.enName != null">
                and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                or A.id in (select uid from tb_user_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                )
            </if>
        </if>
        <if test="sqlMap.support==null">
            <if test="sqlMap.enName != null">
                and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                or A.id in (select uid from tb_user_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR})
                )
            </if>
        </if>
        <if test="sqlMap.agentUserList!=null">
            <if test="sqlMap.agentUserList.size()==0">
                and A.is_ibId in ('')
            </if>
            <if test="sqlMap.agentUserList.size()&gt;0">
                and A.is_ibId in
                <foreach item="agentUser" index="index" collection="sqlMap.agentUserList" open="(" separator="," close=")">
                    #{agentUser.id}
                </foreach>
            </if>

        </if>
        <if test="sqlMap.ibId != null and sqlMap.flagIbid !=null ">
            and A.is_ibId = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.agentId != null and sqlMap.agentId >= 0">
            and A.is_ibId = #{sqlMap.agentId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.dataSource != null and sqlMap.dataSource > 0">
            and A.mt4_datasource_id = #{sqlMap.dataSource, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.custcateId != null and sqlMap.custcateId != 0">
            and A.cust_cateId = #{sqlMap.custcateId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.lead_status != null ">
            and A.lead_status = #{sqlMap.lead_status, jdbcType=VARCHAR}
        </if>
        <if test="sqlMap.interest != null ">
            and A.interest = #{sqlMap.interest, jdbcType=VARCHAR}
        </if>
        <if test="sqlMap.orgId != null ">
            and A.org_id in  (${sqlMap.orgId})
        </if>
        <if test="sqlMap.notcustcateId != null and sqlMap.notcustcateId != 0">
            and A.cust_cateId != #{sqlMap.notcustcateId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.salestime_QUERY_EQUALS != null ">
            and A.id in (select user_id from tb_sales_info where next_interview_date BETWEEN
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.salestime_QUERY_MORE != null">
            and A.id in (select user_id from tb_sales_info where next_interview_date &gt;
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.salestime_QUERY_LESS != null">
            and A.id in (select user_id from tb_sales_info where next_interview_date &lt;
            #{sqlMap.startTime, jdbcType=TIMESTAMP} and is_last=1)
        </if>
        <if test="sqlMap.startTime != null and sqlMap.endTime != null and (sqlMap.returnTime > 0 or sqlMap.returnTime = -6)">
            <if test="sqlMap.returnTime != 2 and sqlMap.returnTime != 3 ">
                and A.id in (select user_id from tb_sales_info where next_interview_date BETWEEN
                #{sqlMap.startTime, jdbcType=TIMESTAMP} and #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
            <if test="sqlMap.returnTime == 2 or sqlMap.returnTime == 3 ">
                and A.id in (select user_id from tb_sales_info where next_interview_date &lt;
                #{sqlMap.endTime, jdbcType=TIMESTAMP} and is_last=1)
            </if>
        </if>
        order by A.id desc
    </select>

    <select id="findNoIb" resultMap="BaseResultMap">
        select * from tb_user_register where is_ibid=0 and website_user_type != 6 and ibName is not null
    </select>
    <select id="getExperienceActCount" resultType="java.lang.Integer" parameterType="com.fx.user.model.UserRegister">
        select
        count( A.id)
        from tb_user_register A,tb_user_register u1, tb_sys_organization org
        WHERE A.level_path.IsDescendantOf(u1.level_path)=1
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.website_user_type =6
        ${sqlMap.dsf}
        and  u1.level_num = (SELECT MIN(u1.level_num)   FROM
        tb_user_register u1, tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        ${sqlMap.dsf}
        )
        and A.is_del = 0
        and A.website_user_type = 7
        <if test="sqlMap.enName != null">
            and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
            or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
            or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
            or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR}))
        </if>
        <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
            and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.ibId, jdbcType=INTEGER})) = 1
        </if>
        <if test="sqlMap.ibId != null and sqlMap.flagIbid !=null ">
            and A.is_ibId = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.dataSource != null and sqlMap.dataSource > 0">
            and A.mt4_datasource_id = #{sqlMap.dataSource, jdbcType=INTEGER}
        </if>
    </select>
    <select id="getExperienceAct" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
         select
        top ${sqlMap.limit}
        A.*
        from tb_user_register A,tb_user_register u1, tb_sys_organization org
        WHERE A.level_path.IsDescendantOf(u1.level_path)=1
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.website_user_type =6
        ${sqlMap.dsf}
        and  u1.level_num = (SELECT MIN(u1.level_num)   FROM
        tb_user_register u1, tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        ${sqlMap.dsf}
        )
        AND A.is_del = 0
        and A.website_user_type = 7
        <if test="sqlMap.enName != null">
            and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
            or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
            or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
            or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR}))
        </if>
        <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
            and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.ibId, jdbcType=INTEGER})) = 1
        </if>
        <if test="sqlMap.ibId != null and sqlMap.flagIbid !=null ">
            and A.is_ibId = #{sqlMap.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.dataSource != null and sqlMap.dataSource > 0">
            and A.mt4_datasource_id = #{sqlMap.dataSource, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.offset gt 0">
            and (
            (SELECT MIN(id) FROM (SELECT  TOP ${sqlMap.offset}  A.id
            from tb_user_register A,tb_user_register u1, tb_sys_organization org
            WHERE A.level_path.IsDescendantOf(u1.level_path)=1
            and A.is_del = 0
            and u1.org_id = org.id
            and u1.website_user_type =6
            ${sqlMap.dsf}
            and  u1.level_num = (SELECT MIN(u1.level_num)   FROM
            tb_user_register u1, tb_sys_organization org
            WHERE
            u1.org_id = org.id
            and u1.website_user_type =6
            ${sqlMap.dsf}
            )
            AND A.is_del = 0
            and A.website_user_type = 7
            <if test="sqlMap.enName != null">
                and (A.cnName like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.email like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.phone_num like #{sqlMap.enName, jdbcType=VARCHAR}
                or A.id in (select uid from tb_user_mt4_account where mt4_account like #{sqlMap.enName, jdbcType=VARCHAR}))
            </if>
            <if test="sqlMap.ibId != null and sqlMap.ibId > 0">
                and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.ibId, jdbcType=INTEGER})) = 1
            </if>
            <if test="sqlMap.ibId != null and sqlMap.flagIbid !=null ">
                and A.is_ibId = #{sqlMap.ibId, jdbcType=INTEGER}
            </if>
            <if test="sqlMap.dataSource != null and sqlMap.dataSource > 0">
                and A.mt4_datasource_id = #{sqlMap.dataSource, jdbcType=INTEGER}
            </if>
            ORDER BY A.id desc) AS T) > A.id
            )
        </if>
        order by A.id desc
    </select>
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where id = #{id,jdbcType=INTEGER}
        and is_del = 0
    </select>
    <select id="getbyUids" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0
        <if test="uids != null">
            and id in
            <foreach item="uid" index="index" collection="uids" open="(" separator="," close=")">
                #{uid}
            </foreach>
        </if>
        <if test="uids == null">
            and id in ('')
        </if>

    </select>
    <!--查询全部的ib，个人用户，demo账户-->
    <select id="selectIBAndDemoAndPersonal" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where website_user_type in (1,2,5)
        and is_del = 0
        and ib_user_type = 1
        <if test="keyword!=null and keyword != '' ">
            and (cnName like #{keyword, jdbcType=VARCHAR}
            or email like #{keyword, jdbcType=VARCHAR}
            or phone_num like #{keyword, jdbcType=VARCHAR}
            )
        </if>
        ORDER BY id desc
    </select>

    
    <select id="getUserRegisterByName" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from tb_user_register
        where website_user_type in (1,2,5)
        and is_del = 0 <if test="userName!=null">and cnName like #{userName,jdbcType=VARCHAR}</if>
        ORDER BY cnName desc
    </select>
    
    <select id="findUidsByCondition" resultType="java.lang.Integer" parameterType="com.fx.user.model.UserRegister" >

        WITH ib_list AS (
        SELECT
        t.is_ibId,
        t.id,
        1 AS xLEVEL,
        t.is_del,
        t.cnName,
        t.mt4_datasource_type,
        t.phone_num,
        t.mt4_datasource_id
        FROM
        tb_user_register t
        WHERE
        t.is_ibId IN (
        SELECT
        u.id
        FROM
        tb_user_register u,
        tb_sys_organization org
        WHERE
        u.is_del = 0
        and u.org_id = org.id
        and u.website_user_type = 6
        ${sqlMap.dsf}
        )
        AND t.is_del = 0
        UNION ALL
        SELECT
        c.is_ibId,
        c.id,
        ib_list.xLEVEL + 1,
        c.is_del,
        c.cnName,
        c.mt4_datasource_type,
        c.phone_num,
        c.mt4_datasource_id
        FROM
        tb_user_register c
        INNER JOIN ib_list ON c.is_ibId = ib_list.id)
        select
        m.id
        from
        tb_user_register m, ib_list A
        where
        m.is_del = 0
        and m.id=A.id
        and (m.is_ibId in ( SELECT
        u.id
        FROM
        tb_user_register u,
        tb_sys_organization org
        WHERE
        u.is_del = 0
        AND u.org_id = org.id
        AND u.website_user_type = 6
        ${sqlMap.dsf})
        or m.is_ibId in (select id from ib_list))
        <if test="sqlMap.params.ibId != null and sqlMap.params.ibId >= 0">
            and m.is_ibId = #{sqlMap.params.ibId, jdbcType=INTEGER}
        </if>
        <if test="sqlMap.params.enName != null ">
            and (A.cnName LIKE #{sqlMap.params.enName, jdbcType=VARCHAR} or m.email LIKE
            #{sqlMap.params.enName, jdbcType=VARCHAR})
        </if>
        and m.mt4_datasource_id = #{sqlMap.params.dataSource, jdbcType=INTEGER}
    </select>
    <select id="findUidsByConditionTrader" resultType="java.lang.Integer"
            parameterType="com.fx.user.model.UserRegister">

        WITH ib_list AS (
        SELECT
        t.is_ibId,
        t.id,
        1 AS xLEVEL,
        t.is_del,
        t.cnName,
        t.mt4_datasource_type,
        t.phone_num,
        t.mt4_datasource_id
        FROM
        tb_user_register t
        WHERE
        t.id = #{sqlMap.params.uid, jdbcType=TINYINT}
        AND t.is_del = 0
        UNION ALL
        SELECT
        c.is_ibId,
        c.id,
        ib_list.xLEVEL + 1,
        c.is_del,
        c.cnName,
        c.mt4_datasource_type,
        c.phone_num,
        c.mt4_datasource_id
        FROM
        tb_user_register c
        INNER JOIN ib_list ON c.is_ibId = ib_list.id
        )
        SELECT
        DISTINCT m.id
        FROM
        tb_user_register m,
        ib_list A
        WHERE
        m.is_del = 0
        AND (
        (
        m.id = A.id
        AND m.is_ibId IN (SELECT id FROM ib_list)
        )
        OR (m.id != A.id and m.is_ibId IN (SELECT id FROM ib_list))
        or (m.id=#{sqlMap.params.uid, jdbcType=TINYINT} )

        )
        <if test="sqlMap.params.enName != null ">
            and (A.cnName LIKE #{sqlMap.params.enName, jdbcType=VARCHAR} or m.email LIKE
            #{sqlMap.params.enName, jdbcType=VARCHAR})
        </if>
    </select>
    <select id="selectSalesRepeat" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List" />
        from tb_user_register
        where is_del = 0
        and website_user_type in (1,2,5)
        <if test="keyword!=null">
            and (cnName = #{keyword, jdbcType=VARCHAR} or phone_num = #{keyword, jdbcType=VARCHAR} or email = #{keyword, jdbcType=VARCHAR}
            or id in(select uid from tb_user_mt4_account where is_del = 0 and  mt4_account like #{keyword, jdbcType=VARCHAR})
            or id in(select uid from tb_user_account where is_del = 0 and  mt4_account like #{keyword, jdbcType=VARCHAR}))
        </if>
    </select>
    <select id="getAllExpUsers" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
          <include refid="Base_Column_List" />
        FROM
          tb_user_register
        WHERE
          is_del = 0
          AND website_user_type = 7
    </select>
    <select id="geiInnerUserByEmail" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where email = #{email,jdbcType=VARCHAR} and website_user_type=6
        and is_del = 0 
    </select>

    <select id="getByNameId" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0
        <if test="uidList != null">
            and id in
            <foreach item="uid" index="index" collection="uidList" open="(" separator="," close=")">
                #{uid}
            </foreach>
        </if>
        <if test="uidList == null">
            and id in ('')
        </if>
        <if test="agentUserName != null">
            and cnName like #{agentUserName,jdbcType=VARCHAR}
        </if>

    </select>
    <select id="getUidsByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0
        <if test="ibId != null">
            and is_ibId=#{ibId,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getByIBId" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0
        <if test="ibId != null">
            and is_ibId=#{ibId,jdbcType=INTEGER}
        </if>
        and is_ib = 1
    </select>
    <select id="getURByName" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from tb_user_register
        where  is_del = 0 <if test="agentusername!=null">and cnName like #{agentusername,jdbcType=VARCHAR}</if>
        ORDER BY cnName desc
    </select>

    <select id="findUserByIbNameAndAgentName" resultMap="BaseResultMap" parameterType="java.util.Map">
        select u.* from tb_user_register u, tb_user_register a
        where u.is_ibId = a.id
        and u.website_user_type = 5
        and u.cnname = #{ibName,jdbcType=VARCHAR}
        and a.cnname = #{agentName,jdbcType=VARCHAR}
    </select>

    <select id="findCustomersByUpper" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        select
          <include refid="Base_Column_List"/>
        from tb_user_register
         where is_del = 0
        and status = 2
        <if test="websiteUserType != 0">
            and website_user_type = #{websiteUserType}
        </if>
        <if test="is_ibId != 0">
            and is_ibid = #{is_ibId}
        </if>
    </select>
    <select id="getAllSonUsersById" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT * from tb_user_register t where
        t.level_path.IsDescendantOf((SELECT level_path from tb_user_register where id = #{id, jdbcType=INTEGER}))=1
        order by id
    </select>

    <select id="getAllSonUsersBySuperId" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT * from tb_user_register t where superior_id=#{id,jdbcType=INTEGER} and is_del=0 and website_user_type=6
        order by id
    </select>
    <select id="getByName" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register
        where is_del = 0
        <if test="login != null">
            and cnName like #{login,jdbcType=VARCHAR}
        </if>
        <if test="login == null">
            and 1=2
        </if>
        order by id desc
    </select>
    <select id="getAllAdminUsers" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tb_user_register
        WHERE is_del = 0 AND website_user_type = 6
    </select>
    
    <select id="getUserRegisterCountBystus" resultType="java.lang.Integer" parameterType="com.fx.user.model.UserRegister">
        SELECT
        count(DISTINCT A.id)
        FROM
        tb_user_register A ,tb_user_register u1, tb_sys_organization org
        WHERE (A.level_path.IsDescendantOf(u1.level_path)=1)
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        <if test="sqlMap.params.ibId != null and sqlMap.params.ibId > 0 and sqlMap.params.flagIbid == null">
        and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.params.ibId, jdbcType=INTEGER})) = 1
        </if>
        ${sqlMap.dsf}
        and u1.id not in (
        select a.id from
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as a
        ,
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as b
        where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
        )
        and A.website_user_type = #{websiteUserType,jdbcType=INTEGER}

        <if test="sqlMap.name!=null">
            and A.cnName like #{sqlMap.name, jdbcType=VARCHAR}
        </if>
        <if test="sqlMap.params.ibId != null and sqlMap.params.flagIbid != null">
            and A.superior_id = #{sqlMap.params.ibId, jdbcType=INTEGER} and A.website_user_type=6
        </if>
        <if test="sqlMap.status!=null">
        	<if test="sqlMap.status==1">and A.id in(select user_id from tb_admin a where a.status=#{sqlMap.status} and a.is_del=0)</if>
        	<if test="sqlMap.status==0">and A.id in(select user_id from tb_admin a where a.status!=1 and a.is_del=0)</if>
        </if>
    </select>
    
    <select id="getUserRegisterStatus" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        SELECT
        DISTINCT top ${sqlMap.limit}
        A.*
        FROM
        tb_user_register A ,tb_user_register u1, tb_sys_organization org
        WHERE (A.level_path.IsDescendantOf(u1.level_path)=1)
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        <if test="sqlMap.params.ibId != null and sqlMap.params.ibId > 0 and sqlMap.params.flagIbid == null">
            and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.params.ibId, jdbcType=INTEGER})) = 1

        </if>
        ${sqlMap.dsf}

        and u1.id not in (
        select a.id from
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as a
        ,
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as b
        where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
        )

        and A.website_user_type = #{websiteUserType,jdbcType=INTEGER}

        <if test="sqlMap.name!=null">
            and A.cnName like #{sqlMap.name, jdbcType=VARCHAR}
        </if>
        <if test="sqlMap.params.ibId != null and sqlMap.params.flagIbid != null">
            and A.superior_id = #{sqlMap.params.ibId, jdbcType=INTEGER} and A.website_user_type=6
        </if>
        <if test="sqlMap.status!=null">
            <if test="sqlMap.status==1">and A.id in(select user_id from tb_admin a where a.status=#{sqlMap.status} and a.is_del=0)</if>
            <if test="sqlMap.status==0">and A.id in(select user_id from tb_admin a where a.status!=1 and a.is_del=0)</if>
        </if>
        <if test="sqlMap.offset gt 0">
            and (
            (SELECT
            MIN(id) FROM (
            SELECT
            DISTINCT TOP ${sqlMap.offset}  A1.id
            FROM
            tb_user_register A1,tb_user_register u2, tb_sys_organization org
            WHERE (A1.level_path.IsDescendantOf(u2.level_path)=1)
            and A1.is_del = 0
            and u2.org_id = org.id
            and u2.website_user_type =6
            and u2.is_del = 0
            <if test="sqlMap.params.ibId != null and sqlMap.params.ibId > 0 and sqlMap.params.flagIbid == null">
                and A1.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.params.ibId , jdbcType=INTEGER})) = 1

            </if>
            ${sqlMap.sqldsfu2}

            and u2.id not in (
            select a.id from
            (SELECT
            u1.*
            FROM
            tb_user_register u1,
            tb_sys_organization org
            WHERE
            u1.org_id = org.id
            and u1.website_user_type =6
            and u1.is_del = 0
            ${sqlMap.dsf}
            ) as a
            ,
            (SELECT
            u1.*
            FROM
            tb_user_register u1,
            tb_sys_organization org
            WHERE
            u1.org_id = org.id
            and u1.website_user_type =6
            and u1.is_del = 0
            ${sqlMap.dsf}
            ) as b
            where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
            )
            and A1.website_user_type = #{websiteUserType,jdbcType=INTEGER}
            <if test="sqlMap.name!=null">
                and A1.cnName like #{sqlMap.name, jdbcType=VARCHAR}
            </if>
            <if test="sqlMap.params.ibId != null and sqlMap.params.flagIbid != null">
                and A1.superior_id = #{sqlMap.params.ibId, jdbcType=INTEGER} and A1.website_user_type=6
            </if>
            <if test="sqlMap.status!=null">
                <if test="sqlMap.status==1">and A1.id in(select user_id from tb_admin a where a.status=#{sqlMap.status} and a.is_del=0)</if>
                <if test="sqlMap.status==0">and A1.id in(select user_id from tb_admin a where a.status!=1 and a.is_del=0)</if>
            </if>
            ORDER BY A1.id desc) AS T) > A.id
            )
        </if>
        order by A.id desc
    </select>
    
    <select id="getUserRegisterByLikeName" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from tb_user_register
        where website_user_type = #{websiteUserType} 
        and is_del = 0 and cnName like #{name,jdbcType=VARCHAR}
        ORDER BY cnName desc
    </select>
    
    <select id="getByWebsiteUserTypeAndLikeNameNoPage" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        SELECT
        DISTINCT
        A.*
        FROM
        tb_user_register A ,tb_user_register u1, tb_sys_organization org
        WHERE (A.level_path.IsDescendantOf(u1.level_path)=1 )
        and A.is_del = 0
        and u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        <if test="sqlMap.params.ibId != null and sqlMap.params.ibId > 0 and sqlMap.params.flagIbid == null">
            and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.params.ibId, jdbcType=INTEGER})) = 1

        </if>
        ${sqlMap.dsf}
        and u1.id not in (
        select a.id from
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as a
        ,
        (SELECT
        u1.*
        FROM
        tb_user_register u1,
        tb_sys_organization org
        WHERE
        u1.org_id = org.id
        and u1.website_user_type =6
        and u1.is_del = 0
        ${sqlMap.dsf}
        ) as b
        where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
        )

        and A.website_user_type = #{websiteUserType,jdbcType=INTEGER}

        <if test="sqlMap.name!=null">
            and A.cnName like #{sqlMap.name, jdbcType=VARCHAR}
        </if>
        <if test="sqlMap.params.ibId != null and sqlMap.params.flagIbid != null">
            and A.superior_id = #{sqlMap.params.ibId, jdbcType=INTEGER} and A.website_user_type=6
        </if>

        <if test="sqlMap.status!=null">
            <if test="sqlMap.status==1">and A.id in(select user_id from tb_admin a where a.status=#{sqlMap.status} and a.is_del=0)</if>
            <if test="sqlMap.status==0">and A.id in(select user_id from tb_admin a where a.status!=1 and a.is_del=0)</if>
        </if>

        order by A.id desc
    </select>


    <select id="findUserByEntity" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        select <include refid="Base_Column_List_MoreTable"/>
        from tb_user_register u1 , tb_sys_organization org
        <if test="cnName != null">
            , (
            select DISTINCT  a.id from tb_user_register a,tb_user_register b where
            b.cnName LIKE #{cnName} and  a.is_del = 0
            AND b.level_path.IsDescendantOf (a.level_path) = 1
            ) as a
        </if>
        WHERE u1.org_id = org.id
         AND u1.is_del = 0
         and u1.ib_user_type = 1
        ${sqlMap.dsf}
        <if test="websiteUserType != 0">
            and u1.website_user_type = #{websiteUserType}
        </if>
        <if test="orgId != -1">
            and u1.org_id = #{orgId}
        </if>
        <if test="superior_id != 0">
            and u1.superior_id = #{superior_id}
        </if>
        <if test="is_ibId != 0">
            and u1.is_ibId = #{is_ibId}
        </if>
        <if test="cnName != null">
            and u1.id =a.id
        </if>
        order by u1.cnName asc
    </select>

    <select id="findInnerUserByEntity" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
    select <include refid="Base_Column_List_MoreTable"/>
    from tb_user_register u1 , tb_sys_organization org , tb_user_register u
    WHERE u1.org_id = org.id
    and org.id = u.org_id
    and u1.superior_id = u.id
    AND u1.is_del = 0
    and u1.ib_user_type = 1
    ${sqlMap.dsf}
    <if test="websiteUserType != 0">
        and u1.website_user_type = #{websiteUserType}
    </if>
    <if test="orgId != -1">
        and u1.org_id = #{orgId}
    </if>
    <if test="superior_id != 0">
        and u1.superior_id = #{superior_id}
    </if>
    <if test="is_ibId != 0">
        and u1.is_ibId = #{is_ibId}
    </if>

    </select>


    <update id="updateIsIbidByIdList" parameterType="com.fx.user.model.UserRegister">
        UPDATE tb_user_register set is_ibid = #{is_ibId}, update_user=#{updateUser}, update_Time = #{updateTime}
         where id in
        <foreach collection="sqlMap.ids" item="sid" separator="," open="(" close=")">#{sid}</foreach>
    </update>

    <select id="findUserregisterByIdList" resultMap="BaseResultMap" parameterType="com.fx.user.model.UserRegister">
        select
        <include refid="Base_Column_List"/>
        from  tb_user_register
        where id in
        <foreach collection="sqlMap.ids" item="sid" separator="," open="(" close=")">#{sid}</foreach>
    </select>

    <select id="getByIdListAndDatasource" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_user_register where 1=1
        <if test="idList != null and idList.size() &gt;0">
             and id in
            <foreach collection="idList" item="id" separator="," open="(" close=")">#{id,jdbcType=INTEGER}</foreach>
        </if>
        <if test="idList == null">
            and id in ('')
        </if>
        <if test="dataSource != null and dataSource > 0">
            and mt4_datasource_id = #{dataSource, jdbcType=INTEGER}
        </if>
    </select>
    <!--查询所有外部用户和live用户-->
    <select id="findAllUsers" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tb_user_register WHERE 1=1
        AND is_del = 0 AND (website_user_type = 2 OR website_user_type = 5 OR  website_user_type = 6) AND (salt IS NULL OR salt = '')
    </select>
    <select id="getAllLivesAndAllIbs" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tb_user_register WHERE 1=1
        AND is_del = 0 AND (website_user_type = 2 OR website_user_type = 5)
    </select>

    <select id="findUserIdByLevelPathisOne" resultType="java.lang.Integer" parameterType="java.util.Map">
         select a.id from
        (SELECT
        u.*
        FROM
        tb_user_register u,
        tb_sys_organization org
        WHERE
        u.org_id = org.id
        and u.website_user_type =6
        and u.is_del = 0
        ) as a,
        (SELECT
        u.*
        FROM
        tb_user_register u,
        tb_sys_organization org
        WHERE
        u.org_id = org.id
        and u.website_user_type =6
        and u.is_del = 0
        ) as b
        where a.level_path.IsDescendantOf(b.level_path)=1 and a.id != b.id
    </select>
    <select id="findUserIdBySqlmapConditions" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        A.*
        FROM
        tb_user_register A ,tb_user_register u, tb_sys_organization org
        WHERE A.level_path.IsDescendantOf(u.level_path)=1
        and A.is_del = 0
        and u.org_id = org.id
        and u.website_user_type =6
        and u.is_del = 0
        <if test="userregisterIds != null">
            and u.id not in
            <foreach item="uid" index="index" collection="userregisterIds" open="(" separator="," close=")">
                #{uid}
            </foreach>
        </if>
        <if test="userregisterIds == null">
            and  u.id not in ('')
        </if>
        <if test="ibId != null and ibId > 0 and flagIbid == null">
            and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.params.ibId, jdbcType=INTEGER})) = 1
        </if>
    </select>
    <select id="findUserRegisterByCname" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT id from (
        SELECT
        A.*
        FROM
        tb_user_register A ,tb_user_register u, tb_sys_organization org
        WHERE A.level_path.IsDescendantOf(u.level_path)=1
        and A.is_del = 0
        and u.org_id = org.id
        and u.website_user_type =6
        and u.is_del = 0
        <if test="userregisterIds != null">
            and u.id not in
            <foreach item="uid" index="index" collection="userregisterIds" open="(" separator="," close=")">
                #{uid}
            </foreach>
        </if>
        <if test="userregisterIds == null">
            and  u.id not in ('')
        </if>
        <if test="ibId != null and ibId > 0 and flagIbid == null">
            and A.level_path.IsDescendantOf ((SELECT level_path from tb_user_register where id = #{sqlMap.params.ibId, jdbcType=INTEGER})) = 1
        </if>
        ) as A
        where
        A.cnName LIKE #{enName, jdbcType=VARCHAR}
    </select>
</mapper>